import Test from '../testClass.js';

const tests = [
    new Test(
      `C# тілі қай жылдары пайда болды?`, 
      `1993-2001жж.`, 
      [
        `1993-2000жж.`,
        `1998-2001жж.`,
        `2000-2008жж.`,
        `2000-2013жж.`
      ],
    ),
    new Test(
      `C# тілін өңдеген автор?`, 
      `Андерс Хейлсберг`, 
      [
        `Евгений Касперский`,
        `Джеймс Артур`,
        `Джон Фон Нейман`,
        `Дэвид Паттерсон`
      ],
    ),
    new Test(
      `C# тіліндегі басты код файлын көрсетіңіз?`, 
      `*.cs`, 
      [
        `*.exe`,
        `*.cpp`,
        `*.pas`,
        `*.dpr`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық НЕМЕСЕ және меншіктеу қалай жазылады?`, 
      `|=`, 
      [
        `&=`,
        `^=`,
        `/=`,
        `+=`
      ],
    ),
    new Test(
      `C# тіліндегі Қосу және меншіктеу қалай жазылады?`, 
      `+=`, 
      [
        `&=`,
        `^=`,
        `/=`,
        `|=`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық ЖӘНЕ мен меншіктеу қалай жазылады?`, 
      `&=`, 
      [
        `|=`,
        `^=`,
        `/=`,
        `+=`
      ],
    ),
    new Test(
      `C# тіліндегі Бөлу және меншіктеу қалай жазылады?`, 
      `/=`, 
      [
        `&=`,
        `^=`,
        `|=`,
        `+=`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық операциялар?`, 
      `&&, ||, !`, 
      [
        `%, +, -`,
        `^=, &&, <<`,
        `/=, >>, ||`,
        `>, =, <, <=, >=`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық ЖӘНЕ операциясы?`, 
      `&&`, 
      [
        `%`,
        `^=`,
        `||`,
        `>=`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық НЕМЕСЕ операциясы?`, 
      `||`, 
      [
        `%`,
        `&&`,
        `/=`,
        `!`
      ],
    ),
    new Test(
      `C# тіліндегі логикалық ЕМЕС операциясы?`, 
      `!`, 
      [
        `%`,
        `&&`,
        `/=`,
        `||`
      ],
    ),
    new Test(
      `С# тілінде консольді шығару операторлары қалай жазылады`, 
      `Console.WriteLine();`, 
      [
        `Write();`,
        `Read();`,
        `Console.Print()`,
        `Console.Read();`
      ],
    ),
    new Test(
      `С# тілінде консольді шығару операторлары`, 
      `Console.Write();`, 
      [
        `WriteLine();`,
        `Console.Read();`,
        `Console.ReadLine(),`,
        `Read();`
      ],
    ),
    new Test(
      `С# тілінде консольді енгізу операторларын көрсетіңіз`, 
      `Console.ReadLine()`, 
      [
        `Console.Write();`,
        `Console.WriteLine();`,
        `Console();`,
        `Read();`
      ],
    ),
    new Test(
      `С# тілінде консольді енгізу операторлары`, 
      `Console.Read()`, 
      [
        `Console.Write()`,
        `Console.WriteLine()`,
        `Write();`,
        `ReadLine()`
      ],
    ),
    new Test(
      `Кластың немесе құрылымның жалпы құрамдас бөлігі:`, 
      `қоғамдық`, 
      [
        `жеке`,
        `қорғалған`,
        `ішкі`,
        `статикалық`
      ],
    ),
    new Test(
      `Уақыттың бір мезетінде нысан мыналармен сипатталады:`, 
      `Қасиеттер`, 
      [
        `Оқиғалар`,
        `Айнымалылар`,
        `Атауы`,
        `Сынып`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы көрсеткіштер массивіне жатады?`, 
      `int*[4] p;`, 
      [
        `int p[4];`,
        `int (*)p;`,
        `int *p;`,
        `int p`
      ],
    ),
    new Test(
      `Берілген көрсеткіштің қайсысын арттыруға болмайды?`, 
      `void`, 
      [
        `float`,
        `char`,
        `int`,
        `string`
      ],
    ),
    new Test(
      `Жолдан бос орынды жою үшін қолданылатын әдіс`, 
      `Trim()`, 
      [
        `TrimStart()`,
        `Substring()`,
        `Split()`,
        `Start()`
      ],
    ),
    new Test(
      `Келесі мәліметтер үшін логикалық өрнектердің қайсысы жалған болады: int a=5, k=2, m=7, n=4;`, 
      `a<k || m<n`, 
      [
        `a<k || m>n`,
        `a>k || m>n`,
        `a<n && m>k`,
        `a>k && m>n`
      ],
    ),
    new Test(
      `String класының осы әдістерінің қайсысы String нысанының ұзындығын алу үшін қолданылады?`, 
      `Length()`, 
      [
        `Lengthof()`,
        `String`,
        `Sizeof()`,
        `алу()`
      ],
    ),
    new Test(
      `«?:» операторы:`, 
      `тернарлық оператор`, 
      [
        `тура оператор`,
        `бүтін санға бөлу`,
        `сұрақ белгісі`,
        `Қосу`
      ],
    ),
    new Test(
      `Айнымалылардың бүтін типі?`, 
      `int`, 
      [
        `char`,
        `double`,
        `float`,
        `string`
      ],
    ),
    new Test(
      `C# тілінде бағдарламаның коды қандай файлда жазылады: который в структуре проекта называется просто Form1, содержит код или программную логику формы:`, 
      `Program.cs`, 
      [
        `8`,
        `12`,
        `16`,
        `11`
      ],
    ),
    new Test(
      `TForm -ның ресурстарын сақтайтын файл`, 
      `Form1.resx`, 
      [
        `Form1.Designer.cs`,
        `Program.cs`,
        `helloapp.csproj:`,
        `Form1.Designer`
      ],
    ),
    new Test(
      `TForm -ның форма дизайнерін сипаттайтын файл?`, 
      `Form1.Designer.cs`, 
      [
        `Form1.resx`,
        `Program.cs`,
        `helloapp.csproj:`,
        `Form1.Designer`
      ],
    ),
    new Test(
      `Қай оператор әдістен мәнді қайтарады?`, 
      `return`, 
      [
        `out`,
        `end`,
        `for`,
        `while`
      ],
    ),
    new Test(
      `TForm-формаға және оған орналастырылған барлық басқару элементтеріне форманың қандай қасиеті қаріпті орнатады?`, 
      `Font`, 
      [
        `Text`,
        `BackColor`,
        `Icon`,
        `ForeColor`
      ],
    ),
    new Test(
      `TForm-форманың қандай қасиеті тақырыбын анықтайды?`, 
      `Text`, 
      [
        `Font`,
        `BackColor`,
        `Icon`,
        `ForeColor`
      ],
    ),
    new Test(
      `TForm-форманың фондық түсін анықтайтын қасиеті ?`, 
      `BackColor`, 
      [
        `Font`,
        `Text`,
        `Icon`,
        `ForeColor`
      ],
    ),
    new Test(
      `TForm-форманың белгішесін (иконка) орнатады?`, 
      `Icon`, 
      [
        `Font`,
        `Text`,
        `BackColor`,
        `ForeColor`
      ],
    ),
    new Test(
      `TForm-формадағы шрифт түсін анықтайды?`, 
      `ForeColor`, 
      [
        `Font`,
        `Text`,
        `BackColor`,
        `Icon`
      ],
    ),
    new Test(
      `Біз осы компонентті шерту арқылы белгілі бір әрекеттерді орындай аламыз.`, 
      `Button`, 
      [
        `Label`,
        `TextBox`,
        `CheckBox`,
        `ListBox`
      ],
    ),
    new Test(
      `Формада тек оқуға арналған қарапайым мәтінді көрсету үшін қолданылатын компонент?`, 
      `Label`, 
      [
        `Button`,
        `TextBox`,
        `CheckBox`,
        `ListBox`
      ],
    ),
    new Test(
      `ТLabel компонентінің қандай қасиеті көрсетілетін мәтінді орнату үшін қолданылады?`, 
      `Text`, 
      [
        `Font`,
        `WordWrap`,
        `BackColor`,
        `Icon`
      ],
    ),
    new Test(
      `Мәтінді енгізу және өңдеу үшін пайдаланылатын мәтіндік өріс.`, 
      `TextBox`, 
      [
        `Button`,
        `Label`,
        `CheckBox`,
        `ListBox`
      ],
    ),
    new Test(
      `TextBox элементіндегі ұзын мәтінді сөздерді асты-астына түсіру үшін қай қасиетіне true мәнін орнату керек.`, 
      `WordWrap`, 
      [
        `Font`,
        `Text`,
        `BackColor`,
        `Icon`
      ],
    ),
    new Test(
      `Құсбелгі (галочка/фложок) мәнінің (белгіленген немесе белгіленбеген) бірін орнатуға арналған компонент:`, 
      `CheckBox`, 
      [
        `Button`,
        `Label`,
        `TextBox`,
        `ListBox`
      ],
    ),
    new Test(
      `Құсбелгіні (галочка/фложок) қою үшін CheckBox компонентінің қай қасиетіне true мәнін орнату керек:`, 
      `Checked`, 
      [
        `Items`,
        `ItemIndex`,
        `Text`,
        `Font`
      ],
    ),
    new Test(
      `CheckBox компонентіне ұқсайтын компонент?`, 
      `RadioButton`, 
      [
        `CheckBox`,
        `Label`,
        `TextBox`,
        `ListBox`
      ],
    ),
    new Test(
      `Бірнеше қарапайым мәтіндік тізімді шығаруға арналған компонент`, 
      `ListBox`, 
      [
        `CheckBox`,
        `Label`,
        `TextBox`,
        `RadioButton`
      ],
    ),
    new Test(
      `Барлық тізімдердің жиынын сақтайтын ListBox компонентінің негізгі қасиеті.`, 
      `Items`, 
      [
        `Checked`,
        `ItemIndex`,
        `Text`,
        `Font`
      ],
    ),
    new Test(
      `ListBox компонентінің тізіміне жаңа элемент қосу үшін қандай әдіс пайдаланамыз?`, 
      `Add`, 
      [
        `Checked`,
        `ItemIndex`,
        `Text`,
        `Items`
      ],
    ),
    new Test(
      `Төмендегі мәлімдемелердің қайсысы C# тілінде клас типін қайтарады?`, 
      `typeof`, 
      [
        `&`,
        `*`,
        `sizeof`,
        `%`
      ],
    ),
    new Test(
      `Интернеттен мазмұнды жүктеп алуға және көрсетуге мүмкіндік беретін Интернет броузерінің функционалдығын қамтамасыз ететін компонент.`, 
      `WebBrowser`, 
      [
        `CheckBox`,
        `Label`,
        `TextBox`,
        `ListBox`
      ],
    ),
    new Test(
      `WebBrowser компонентінің интернеттегі белгілі бір мекенжайды ашатын қасиеті`, 
      `Navigate`, 
      [
        `Show`,
        `URL`,
        `GoBack()`,
        `GoHome()`
      ],
    ),
    new Test(
      `Хабарламаларды көрсету үшін пайдаланылатын компонент.`, 
      `MessageBox`, 
      [
        `CheckBox`,
        `WebBrowser`,
        `RadioButton`,
        `Panel`
      ],
    ),
    new Test(
      `C# тіліндегі Escape тізбегі – “\v”:`, 
      `Тік қойынды`, 
      [
        `Бос позицияны қайтару`,
        `Көлденең табуляция`,
        `Вагонды қайтару`,
        `Бір позицияны қайтару`
      ],
    ),
    new Test(
      `Консольге харбарлама дұрыс шығару?`, 
      `Console.WriteLine("Сәлем");`, 
      [
        `console.log("Сәлем");`,
        `print("сәлем");`,
        `Console.write("Сәлем");`,
        `Console. Line("Сәлем");`
      ],
    ),
    new Test(
      `Айнымалының мәнін бірге кемітетін азайту операторы:`, 
      `декримент`, 
      [
        `инкримент`,
        `мұндай оператор жоқ`,
        `амперсанд`,
        `ерекшелік`
      ],
    ),
    new Test(
      `C# .net жүйесінде Long Datatype арқылы қанша байт сақталады?`, 
      `8`, 
      [
        `1`,
        `2`,
        `4`,
        `0`
      ],
    ),
    new Test(
      `a және b айнымалыларына мәндерді дұрыс жариялау?`, 
      `int a = 32; int b = 40;`, 
      [
        `int a = b = 42;`,
        `int a = 42; b = 40;`,
        `int a = 32, b = 40,6;`,
        `int a = 32: b = 40;`
      ],
    ),
    new Test(
      `C# тіліндегі Escape тізбегі – “\r”:`, 
      `Вагонды қайтару`, 
      [
        `Бір позицияны қайтару`,
        `Тік табуляция`,
        `Көлденең табуляция`,
        `Екі позицияны қайтару`
      ],
    ),
    new Test(
      `Бағдарламаның орындалу жылдамдығын жақсарту үшін 35 сияқты қарапайым санды сақтау үшін қай деректер түрін таңдаған дұрыс?`, 
      `sbyte`, 
      [
        `long`,
        `int`,
        `short`,
        `string`
      ],
    ),
    new Test(
      `C# тіліндегі Escape тізбегі – “\t”:`, 
      `Көлденең табуляция`, 
      [
        `Бір позицияны қайтару`,
        `Тік табуляция`,
        `Вагонды қайтару`,
        `Үш позицияны қайтару`
      ],
    ),
    new Test(
      `Oндық бөлшексіз санның бастапқы түрі ?`, 
      `Int`, 
      [
        `Long Int`,
        `Unsigned Long`,
        `Unsigned Int`,
        `string`
      ],
    ),
    new Test(
      `Visual Studio терезесінің оң жағында не бар?`, 
      `аспаптар терезелері`, 
      [
        `құжат терезесі`,
        `терезелер арқылы`,
        `мәзір терезесі`,
        `қосымша терезелер`
      ],
    ),
    new Test(
      `Float деректер түрінің дәлдік мәніне дейін жарамды сандар саны?`, 
      `Upto 7 digit`, 
      [
        `Upto 9 digit`,
        `Upto 8 digit`,
        `Upto 6 digit`,
        `Upto 10 digit`
      ],
    ),
    new Test(
      `Қалқымалы деректер түрінің жарамды өлшемі?`, 
      `4 Bytes`, 
      [
        `8 Bytes`,
        `6 Bytes`,
        `10 Bytes`,
        `2 Bytes`
      ],
    ),
    new Test(
      `a айнымалысында 6.28 мәнін анықтаудың дұрыс жолы, мұнда мәнді өзгерту мүмкін емес пе?`, 
      `const float pi = 6.28F`, 
      [
        `pi = 6.28F`,
        `#define a 6.28F`,
        `float pi = 6.28F`,
        `Төбедегінің ешқайсысы емес`
      ],
    ),
    new Test(
      `Төмендегі жазбалардан C++ тілінде қолданылмайтын, бірақ C# тілінде жүзеге асырылатын цикл атауын көрсетіңіз:`, 
      `foreach`, 
      [
        `repeat`,
        `while`,
        `do while`,
        `for`
      ],
    ),
    new Test(
      `Логикалық деректер типінің ағымды мәні ?`, 
      `False`, 
      [
        `1`,
        `True`,
        `0`,
        `жок`
      ],
    ),
    new Test(
      `C# тілінде қандай деректер типі іске асырылған?`, 
      `қарапайым`, 
      [
        `процедуралық`,
        `структуралық`,
        `сілтемелі`,
        `массив`
      ],
    ),
    new Test(
      `Char деректер түрінің өлшемі қандай?`, 
      `16 бит`, 
      [
        `20 бит`,
        `12 бит`,
        `8 бит`,
        `14 бит`
      ],
    ),
    new Test(
      `Екі жолды бір-бірімен салыстыру үшін қолданылатын String әдісі қандай?`, 
      `Compare()`, 
      [
        `ConCat()`,
        `Copy()`,
        `Compare To()`,
        `Length`
      ],
    ),
    new Test(
      `C# тіліндегі Escape реттілігі – “\b”:`, 
      `Бір позицияны қайтару`, 
      [
        `Вагонды қайтару`,
        `Тік табуляция`,
        `Көлденең табуляция`,
        `Жолдық беру`
      ],
    ),
    new Test(
      `Қолданба пайдалану үшін деректерді сақтау үшін компьютер жады пайдаланатын сақтау орны?`, 
      `Variable`, 
      [
        `Constants`,
        `Pointers`,
        `Intrger`,
        `Stek`
      ],
    ),
    new Test(
      `Төмендегі кілт сөздің қайсысы C# тілінде бағдарламаға аттар кеңістігін қосу үшін қолданылады?`, 
      `using`, 
      [
        `exports`,
        `imports`,
        `define`,
        `class`
      ],
    ),
    new Test(
      `C# тілінде сыныпқа кіретін функция аталады:`, 
      `әдіс`, 
      [
        `сынып`,
        `функция`,
        `процедура`,
        `тұрақты`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы түрді C# тілінде 64 биттік бүтін санға түрлендіреді?`, 
      `ToInt64`, 
      [
        `ToInt32`,
        `ToSbyte`,
        `ToSingle`,
        `ToInt`
      ],
    ),
    new Test(
      `C# тіліндегі Array класының келесі қасиетінің қайсысы Массивтің бекітілген өлшемі бар-жоғын тексереді?`, 
      `Length`, 
      [
        `IsStatic`,
        `IsFixedSize`,
        `FixedSize`,
        `Lengthoff`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы класс мүшесі айнымалысының әдепкі қатынас спецификаторы болып табылады?`, 
      `Private`, 
      [
        `Internal`,
        `Protected`,
        `Public`,
        `Instalization`
      ],
    ),
    new Test(
      `Екілік разрадтар бойынша ығыстыру операциялары`, 
      `<<,>>`, 
      [
        `?, :`,
        `%, &`,
        `$, %`,
        `>,<`
      ],
    ),
    new Test(
      `C# тіліндегі Escape реттілігі – “\n”:`, 
      `Жаңа жолға түсу`, 
      [
        `Вагонды қайтару`,
        `Тік табуляция`,
        `Көлденең табуляция`,
        `Бір позицияны қайтару`
      ],
    ),
    new Test(
      `Төмендегі операторлардың қайсысы C# тілінде класс түрін қайтарады?`, 
      `typeof`, 
      [
        `&`,
        `sizeof`,
        `::`,
        `*`
      ],
    ),
    new Test(
      `Төмендегі препроцессорлық директиваның қайсысы C# тілінде символды анықтауға мүмкіндік береді?`, 
      `undef`, 
      [
        `endregion`,
        `region`,
        `define`,
        `end`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы түрді (бүтін немесе жол түрі) C# тілінде күн-уақыт құрылымдарына түрлендіреді?`, 
      `ToDateTime`, 
      [
        `ToChar`,
        `ToSingle`,
        `ToString`,
        `ToDate`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы түрді C# тілінде белгісі жоқ ұзын түрге түрлендіреді?`, 
      `ToUInt32`, 
      [
        `ToString`,
        `ToUInt16`,
        `ToType`,
        `ToUInt`
      ],
    ),
    new Test(
      `C# тіліндегі келесі қатынас спецификаторларының қайсысы еншілес сыныпқа оның негізгі класының мүше айнымалы мәндері мен мүше функцияларына қол жеткізуге мүмкіндік береді?`, 
      `Protected`, 
      [
        `Internal`,
        `Private`,
        `Public`,
        `Instalization`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы компилятордың жол нөмірін және (міндетті емес) C# тіліндегі қателер мен ескертулер үшін файл атауының шығысын өзгертуге мүмкіндік береді?`, 
      `line`, 
      [
        `endif`,
        `region`,
        `elif`,
        `end`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы C# тіліндегі #region блогының соңын белгілейді?`, 
      `endregion`, 
      [
        `region`,
        `error`,
        `warning`,
        `end`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы класс мүшесін сыртқы анықтау үшін қолданылады?`, 
      `::`, 
      [
        `#`,
        `:`,
        `+`,
        `*`
      ],
    ),
    new Test(
      `Сыныптың мүше функциясына қол жеткізу үшін қолданылатын оператор ?`, 
      `.`, 
      [
        `::`,
        `#`,
        `:`,
        `+`
      ],
    ),
    new Test(
      `Класс декларациясын қолданатын ең нақтысы қандай?`, 
      `type & scope`, 
      [
        `scope`,
        `type`,
        `&`,
        `& scope`
      ],
    ),
    new Test(
      `Айнымалының мәнін бірге арттыратын операторы:`, 
      `инкримент`, 
      [
        `декримент`,
        `мұндай оператор жоқ`,
        `амперсанд`,
        `ерекшелік`
      ],
    ),
    new Test(
      `«UInt» деректер түрінен алынған «.NET class» атауын таңдаңыз?`, 
      `System.UInt32`, 
      [
        `System.UInt16`,
        `System.UInt64`,
        `System.Int16`,
        `sysrem36`
      ],
    ),
    new Test(
      `Төмендегі класстардың қайсысы IP мекенжайы мен DNS инкапсуляциясы үшін қолданылады?`, 
      `InetAddress`, 
      [
        `ContentHandler`,
        `DatagramPacket`,
        `URL`,
        `Datagram`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы .NET орындау уақыты арқылы анықталған протоколды көрсетіңіз?`, 
      `FTP`, 
      [
        `URL`,
        `Internet`,
        `DDL`,
        `Intranet`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы .NET орындау уақыты арқылы анықталған протоколдар?`, 
      `HTTP`, 
      [
        `URL`,
        `Internet`,
        `DDL`,
        `Intranet`
      ],
    ),
    new Test(
      `URI пішімі жарамсыз болса, қандай ерекшелік шығарылады?`, 
      `MalformedURLException`, 
      [
        `UriFormatException`,
        `URLSourceNotFound`,
        `URLNotFound`,
        `URLException`
      ],
    ),
    new Test(
      `URL нені білдіреді?`, 
      `Uniform Resource Locator`, 
      [
        `Universal Resource Latch`,
        `Universal Resource Locator`,
        `Uniform Resource Latch`,
        `Resource Latch`
      ],
    ),
    new Test(
      `Осы ерекшеліктердің қайсысын URL класының конструкторлары шығарады?`, 
      `Дұрыс емес URLEexception`, 
      [
        `URLNotFoundException`,
        `URLNotFound`,
        `URLSourceNotFound`,
        `NotFound`
      ],
    ),
    new Test(
      `Осы сыныптардың қайсысы IP мекенжайы мен DNS инкапсуляциясы үшін қолданылады?`, 
      `InetAddress`, 
      [
        `ContentHandler`,
        `DatagramPacket`,
        `URL`,
        `Address`
      ],
    ),
    new Test(
      `Берілген операторлардың қайсысы оператордың "мекен-жайы" деп аталады?`, 
      `&`, 
      [
        `~`,
        `^`,
        `*`,
        `+`
      ],
    ),
    new Test(
      `Тізімнен мәндерді таңдау үшін төменде келтірілген компоненттердің қайсысы қолданылады?`, 
      `ListBox`, 
      [
        `Radiobutton`,
        `Panel`,
        `Button`,
        `TextBox`
      ],
    ),
    new Test(
      `Visual Studio бағдарламалау кезінде қандай интерфейс пайдаланылады?`, 
      `IDE`, 
      [
        `SSI`,
        `MIME`,
        `WPF`,
        `XAML`
      ],
    ),
    new Test(
      `Төмендегі жазбалардан C# деректер типтипін көрсетіңіз:`, 
      `статикалық`, 
      [
        `синхрондық`,
        `кодификациялық`,
        `сигналдық`,
        `дыбыстық`
      ],
    ),
    new Test(
      `C# тілінде түсініктемені (комментарий) көрсету үшін қандай белгілер қолданылады?`, 
      `/* */ или \\`, 
      [
        `{ }`,
        `( )`,
        `[ ]`,
        `+ +`
      ],
    ),
    new Test(
      `C# деректер типіне қайсысы жатады?`, 
      `сілтемелік`, 
      [
        `модуляциондық`,
        `маркирлік`,
        `мәтіндік`,
        `суреттік`
      ],
    ),
    new Test(
      `Төмендегі жұмыстардың қайсысы p бүтін көрсеткіші үшін ++*p нұсқауы арқылы орындалады?`, 
      `p мекенжайындағы өсу мәні`, 
      [
        `бетте қамтылған өсу мекенжайы`,
        `p мекенжайындағы кему мәні`,
        `бетте қамтылған кему мекенжайы`,
        `мекенжай көрсетілмейді`
      ],
    ),
    new Test(
      `С# -де логикалық тип қалай анықталады?`, 
      `Boolean`, 
      [
        `Си -де логикалық тип анықталмаған`,
        `Char`,
        `String`,
        `float`
      ],
    ),
    new Test(
      `С# -де логикалық шаманың мәні не болады?`, 
      `true, false`, 
      [
        `+ және –`,
        `0 және 1`,
        `0, 255`,
        `what, black`
      ],
    ),
    new Test(
      `С# тілінде комментарийді белгілеу үшін қандай символдар қолданылады?`, 
      `/* */ немесе \\`, 
      [
        `{ }`,
        `( )`,
        `[ ]`,
        `/+ +/`
      ],
    ),
    new Test(
      `С# тілінде айнымалы мәнін 1- ге арттыруды жүзеге асырмайтын өрнек?`, 
      `x++`, 
      [
        `х=x+1`,
        `x--`,
        `x+=1`,
        `x*=1`
      ],
    ),
    new Test(
      `С# тілінде А және В айнымалыларының орнын ауыстыру қалай жазылады`, 
      `С=A; A=B; B=C;`, 
      [
        `A=B; B+A;`,
        `B=A; A=B;`,
        `C=A; C=B; C=C;`,
        `A=B;`
      ],
    ),
    new Test(
      `C# тілінде консольді режимде шығару операторын көрсетіңіз?`, 
      `Concole.WriteLine();`, 
      [
        `Console.ReadLine();`,
        `Console.Read();`,
        `Text.Box();`,
        `class ConsoleAdder`
      ],
    ),
    new Test(
      `C# тілінде қатарды бүтінге қалай ауыстырамыз?`, 
      `Convert.ToInt32();`, 
      [
        `Convert.ToFloat();`,
        `Convert.ToDouble();`,
        `Convert.ToChar();`,
        `Convert.To;`
      ],
    ),
    new Test(
      `abs(pow(x,2)+pow(y,1/3)) C# тілінде жазылған өрнектің математикалық өрнек түрінде жазылуы қандай?`, 
      `|x2+y^1/3|`, 
      [
        `|x2| +y^1/3`,
        `|x2+e^1/3|`,
        `x2+y^1/3`,
        `x^2+y`
      ],
    ),
    new Test(
      `Көрсеткіштерді пайдаланып функциядан бір уақытта қанша мәнді қайтаруға болады?`, 
      `пайдаланушы қалағанша көп`, 
      [
        `екі рет ғана`,
        `бір рет ғана шақырады`,
        `тек үш рет болады`,
        `пайдаланушы қалауында емес`
      ],
    ),
    new Test(
      `Құрылым көрсеткіші көрсетеді`, 
      `тұтас құрылым`, 
      [
        `құрылымның соңғы мүшесіне ғана`,
        `құрылымның алғашқы екі мүшесі`,
        `құрылымның бірінші мүшесі`,
        `құрылымның ортаңғы мүшесі`
      ],
    ),
    new Test(
      `ptr айнымалысының 6 қалқымалы массивтің көрсеткіші ретінде жариялануы қандай болады?`, 
      `float(*ptr)[6]`, 
      [
        `float(*ptr)(6)`,
        `float *ptr[6]`,
        `float [6]*ptr`,
        `int ()[6]`
      ],
    ),
    new Test(
      `C# түрінің өлшемін табу үшін қай оператор жиі қолданылады?`, 
      `sizeof(түрі)`, 
      [
        `size()`,
        `length()`,
        `lenghtof()`,
        `size`
      ],
    ),
    new Test(
      `Осы қатынас спецификаторларының қайсысы main() әдісі үшін пайдаланылуы керек?`, 
      `private`, 
      [
        `protected`,
        `public`,
        `inisalization`,
        `stek`
      ],
    ),
    new Test(
      `Төбедегінің ешқайсысы емес`, 
      `protected`, 
      [
        `Shared`,
        `private`,
        `static`,
        `class`
      ],
    ),
    new Test(
      `C# тіліндегі жолдар дегеніміз не?`, 
      `кірістірілген деректер түрінің объектілері`, 
      [
        `таңбалар массиві`,
        `қатарлар тізімі`,
        `кірістірілген деректер`,
        `объектілержиынтығы`
      ],
    ),
    new Test(
      `Жол класы салынған аттар кеңістігін таңдаңыз?`, 
      `System.Text`, 
      [
        `System.IO`,
        `System.Net`,
        `System`,
        `System.Box`
      ],
    ),
    new Test(
      `Келесі мәліметтер үшін логикалық өрнектердің қайсысы дұрыс болады: int a=5, k=2,m=7, n=4;`, 
      `a>k && m>n`, 
      [
        `a>k && m<n`,
        `a<k && m<n`,
        `a<k && m>n`,
        `a>n && m<k`
      ],
    ),
    new Test(
      `Осы конструкторлардың қайсысы бос String нысанын жасау үшін қолданылады?`, 
      `String()`, 
      [
        `String(0)`,
        `String(void)`,
        `Start()`,
        `String`
      ],
    ),
    new Test(
      `Бағдарламаның келесі бөлігінде a=5 және b=8,c=4; d=2 болса, z айнымалысы қандай мәні неге тең болады: if (a>b || d<c) z=a+b+c; else z=d*d+a;`, 
      `17`, 
      [
        `9`,
        `13`,
        `15`,
        `6`
      ],
    ),
    new Test(
      `CompareTo() функциясы қайтаратын мән қандай, егер шақырылатын жол салыстыру жолынан аз болса?`, 
      `мәні нөлден аз`, 
      [
        `мәні нөлден үлкен`,
        `нөл`,
        `мәні бірден аз`,
        `мәні бірден үлкен`
      ],
    ),
    new Test(
      `String класының осы әдістерінің қайсысы берілген жолдың белгілі бір ішкі жолдан басталатынын немесе басталмағанын тексеру үшін қолданылады?`, 
      `StartsWith()`, 
      [
        `Ends()`,
        `EndsWith()`,
        `Starts()`,
        `Length`
      ],
    ),
    new Test(
      `String класының осы әдістерінің қайсысы String нысанынан ішкі жолды шығару үшін қолданылады?`, 
      `Substring()`, 
      [
        `Sub_String()`,
        `substring[]`,
        `String()`,
        `SubStr()`
      ],
    ),
    new Test(
      `String класының осы әдістерінің қайсысы алдыңғы және кейінгі бос орындарды жою үшін пайдаланылады?`, 
      `Trim()`, 
      [
        `TrimStart()`,
        `TrimEnd()`,
        `startsWith()`,
        `SubString()`
      ],
    ),
    new Test(
      `Барлық сыныптар иеленетін .NET класын атаңыз:`, 
      `Жүйе.Объект`, 
      [
        `Жүйе.Ерекшелік`,
        `System.File-Stream`,
        `Жүйе. Кездейсоқ`,
        `Жүйелік.Логикалық`
      ],
    ),
    new Test(
      `C# тілінде өзгермелі нүкте сандарын сақтау үшін қандай деректер түрі қолданылады?`, 
      `float`, 
      [
        `floatfc`,
        `Char`,
        `boolFC`,
        `stringe`
      ],
    ),
    new Test(
      `JIT – бұл:`, 
      `CLR жұмыс уақыты компоненті`, 
      [
        `Visual Studio бағдарламасына кіретін тілдердің біріне арналған компилятор`,
        `қоқыс жинаушы пайдаланатын компилятор`,
        `C# компиляторының компоненті`,
        `компилятор қолданатын класс кітапханасы`
      ],
    ),
    new Test(
      `C# тілінде сыныптың қанша ата-аналық класы болуы мүмкін?`, 
      `бір`, 
      [
        `төрт`,
        `бес`,
        `екі`,
        `үш`
      ],
    ),
    new Test(
      `Класс құрамына кіретін функция қалай аталады?`, 
      `әдіс`, 
      [
        `айнымалы`,
        `компилятор`,
        `параметр`,
        `мән`
      ],
    ),
    new Test(
      `Жалпы қолжетімділік спецификаторы:`, 
      `қоғамдық класс компоненті`, 
      [
        `жеке класс компоненті`,
        `модификатор арқылы қол жетімділікті теріңіз`,
        `объект жасамайтын модификатор`,
        `сынып мүшелеріне қол жеткізу`
      ],
    ),
    new Test(
      `Жеке қол жеткізу спецификаторы:`, 
      `жеке класс компоненті`, 
      [
        `қоғамдық класс компоненті`,
        `модификатор арқылы қол жетімділікті теріңіз`,
        `объект жасамайтын модификатор`,
        `сынып мүшелеріне қол жеткізу`
      ],
    ),
    new Test(
      `С# тіліндегі шартсыз өту операторы`, 
      `Goto`, 
      [
        `Break`,
        `Continue`,
        `Return`,
        `For`
      ],
    ),
    new Test(
      `Қандай оператор ақпаратты нақты типтегі айнымалыға түрлендіреді?`, 
      `b=ConvertToDouble(Concole.ReadLine())`, 
      [
        `a=ConvertToInt32(Concole.ReadLine())`,
        `x= Concole.ReadLine(ConvertToDouble())`,
        `y= Concole.ReadLine(ConvertToInt32())`,
        `m= Concole.ReadLine()`
      ],
    ),
    new Test(
      `Анықталған кірістірілмеген типтің тақырыбында бағдарламашы түрдің болуын модификатор арқылы көрсете алады:`, 
      `ішкі`, 
      [
        `жеке`,
        `қорғалған`,
        `қоғамдық`,
        `статикалық`
      ],
    ),
    new Test(
      `Объектіні жасамай-ақ оны басқа класстардан шақыруға мүмкіндік беретін әдіс модификаторы:`, 
      `статикалық`, 
      [
        `жеке`,
        `қорғалған`,
        `қоғамдық`,
        `ішкі`
      ],
    ),
    new Test(
      `Қатынас спецификаторы қорғалған:`, 
      `сынып мүшелеріне қол жеткізу`, 
      [
        `қоғамдық класс компоненті`,
        `модификатор арқылы қол жетімділікті теріңіз`,
        `объект жасамайтын модификатор`,
        `жеке класс компоненті`
      ],
    ),
    new Test(
      `C# тілінде циклді ұйымдастыру үшін қандай операторлар қолданылады?`, 
      `for, while`, 
      [
        `break`,
        `continue`,
        `return, goto`,
        `true, false`
      ],
    ),
    new Test(
      `Жалпы тілді орындау ортасы:`, 
      `Common Language Runtime (CLR)`, 
      [
        `Бағдарлама компиляция жасайды, іске қосылады, бірақ ештеңе жасамайды`,
        `Бағдарлама компиляцияланбайды`,
        `Бағдарлама компиляцияланады және орындалады`,
        `Бағдарлама қате жібереді`
      ],
    ),
    new Test(
      `Бағдарламаның келесі кодын орындау нәтижесінде s айнымалысы қандай мәнге ие болады: int i=1, s=2; while(i<4){ s=s+i; i++;}`, 
      `8`, 
      [
        `10`,
        `12`,
        `14`,
        `16`
      ],
    ),
    new Test(
      `Бағдарламаның келесі кодын орындау нәтижесінде х неге тең болады: int i, p=1; for(i=1;i<3;i++) p=p*(i*i+1);`, 
      `10`, 
      [
        `8`,
        `12`,
        `16`,
        `11`
      ],
    ),
    new Test(
      `Егер ол суперкласспен бір пакетте болса, ішкі сыныпта қандай әдістерді қайта анықтауға болады?`, 
      `қорғалған`, 
      [
        `қоғамдық`,
        `жеке`,
        `қорытынды`,
        `жарамсыз`
      ],
    ),
    new Test(
      `NEW операторы қолданылады:`, 
      `класс данасын құру үшін`, 
      [
        `жаңа айнымалы құру үшін`,
        `жаңа сыныпты жариялау үшін`,
        `бұл OLD операторының антагонисті`,
        `класс данасын жариялау үшін`
      ],
    ),
    new Test(
      `CheckBox және RadioButton басқару элементтерінің мәндерін алу үшін қасысын қолданамыз`, 
      `Checked`, 
      [
        `Locked`,
        `Stacked`,
        `Click`,
        `Dlclick`
      ],
    ),
    new Test(
      `Неліктен жолдар сілтеме түріне жатады C#.NET ?`, 
      `Жолдың өлшемін азайту үшін`, 
      [
        `Стек ағынының мәселесін шешу үшін`,
        `Стекке жол жасау үшін`,
        `Массив ретінде қарастыруға болады`,
        `Жолдың өлшемін көбейту үшін`
      ],
    ),
    new Test(
      `C# тілінде логикалық айнымалының мәні қандай?`, 
      `true, false`, 
      [
        `+ –`,
        `0 1`,
        `0, 255`,
        `what, black`
      ],
    ),
    new Test(
      `int a=12, float b=3.5,int c кезінде c айнымалысына мәндерді тағайындаудың дұрыс жолы;`, 
      `c = a + convert.ToInt32(b);`, 
      [
        `b=3.5,int c;`,
        `c = int(a + b);`,
        `c = a + int(float(b));`,
        `c = a + b;`
      ],
    ),
    new Test(
      `MessageBox.Show("Hello World"); нәтижесінде не шығады және қайда шығады`, 
      `«Hello World» хабарламасы жеке терезеге шығады`, 
      [
        `«Hello World» сөзі формаға шығады`,
        `«Hello» сөзі формаға шығады`,
        `«World» сөзі жеке терезеге шығады`,
        `Ешқандай сөз шықпайды`
      ],
    ),
    new Test(
      `Класс әдістеріне қол жеткізуді басқаратын спецификаторлардың ең толық тізімі:`, 
      `қоғамдық, жеке, қорғалған, ішкі, статикалық`, 
      [
        `жалпы, жеке, статикалық, қос, ұзын, қалқымалы`,
        `жалпы, статикалық, қорғалған, жеке, жол,`,
        `жалпы, жеке, қорғалған`,
        `жария, статикалық, түпкілікті, қорғалған`
      ],
    ),
    new Test(
      `Экранда не күтуге боладыть Console.WriteLine("A" + "B" + "C");:`, 
      `ABC`, 
      [
        `A+B+C`,
        `123`,
        `AB`,
        `күн`
      ],
    ),
    new Test(
      `Қандай артық жүктелген әдіс қолданылатынын не анықтайды – айнымалының түрі немесе объектінің түрі?`, 
      `Айнымалы тип`, 
      [
        `Объектінің түрі`,
        `Файл түрі`,
        `Файл адресі`,
        `Айнымалы мән`
      ],
    ),
    new Test(
      `Мәліметтерді консольге шығаруды дұрыс жазу:`, 
      `Console.WriteLine("Сәлем");`, 
      [
        `print("Сәлем");`,
        `console.log("Сәлем");`,
        `Console.write("Сәлем");`,
        `Java бағдарламасы`
      ],
    ),
    new Test(
      `Дұрыс құрылған айнымалы:`, 
      `таңба белгісі = 'A';`, 
      [
        `x = 0;`,
        `int num = «1»;`,
        `$x = 10;`,
        `қалқымалы үлкен_сан = 23;`
      ],
    ),
    new Test(
      `c нәтижесін көрсетіңіз, егер int a = 10; int b = 4; int c = a % b`, 
      `2`, 
      [
        `3`,
        `11`,
        `1`,
        `2.5`
      ],
    ),
    new Test(
      `c нәтижесін көрсетіңіз, егер int a = 10; int b = 4; bool c = (a == 10 && b == 4);`, 
      `шын`, 
      [
        `жалған`,
        `нөл`,
        `0`,
        `1`
      ],
    ),
    new Test(
      `d нәтижесін көрсетіңіз, егер int a = 0; int b = a++; int c = 0; int d = a + b + c + 3`, 
      `4`, 
      [
        `3`,
        `0`,
        `5`,
        `-1`
      ],
    ),
    new Test(
      `Термин функциясының кодты орындағаннан кейінгі нәтижесі: int Termin(){int a = 1; int b = 3; егер (a!= 5) a + b қайтарса; әйтпесе 0 қайтарады;}`, 
      `4`, 
      [
        `2.5`,
        `3`,
        `2`,
        `5`
      ],
    ),
    new Test(
      `Бағдарламаның келесі бөлігінде a=3 және b=9,c=4; d=5 болса, z айнымалысы қандай мәнге ие: if (a<b && c<d) z=a+b+c; else z=d*d+d;`, 
      `86`, 
      [
        `12`,
        `81`,
        `16`,
        `18`
      ],
    ),
    new Test(
      `Try-catch функциясы:`, 
      `ерекше жағдайлармен жұмыс істейді`, 
      [
        `сыныптармен жұмыс`,
        `Мәліметтер қорымен жұмыс істейді`,
        `файлдармен жұмыс істейді`,
        `әдістермен жұмыс істейді`
      ],
    ),
    new Test(
      `Қай функция екі ішкі жолды дұрыс салыстырады?`, 
      `String.Compare("сәлем", "сәлем");`, 
      [
        `Жол. Бос («сәлем», «сәлем»);`,
        `String.Check("сәлем", "сәлем");`,
        `String.Equal("сәлем", "сәлем");`,
        `String.Match("сәлем", "сәлем");`
      ],
    ),
    new Test(
      `Интерфейстегі жарамды декларация дегеніміз не?`, 
      `public static int START = 1;`, 
      [
        `қорғалған int START = 1;`,
        `соңғы void go (int start);`,
        `өтпелі int START = 1;`,
        `private in getArea();`
      ],
    ),
    new Test(
      `Манипуляциялар кезінде код пен деректерді байланыстыратын және сыртқы кедергілерден және теріс пайдаланудан сақтайтын механизм. Қысқасы ол белгілі бір код пен деректерді барлық басқа кодтар мен деректерден оқшаулайды. Жақсы анықталған интерфейс сол нақты код пен деректерге қол жеткізуді басқарады.`, 
      `Инкапсуляция`, 
      [
        `Полиморфизм`,
        `Мұрагерлік`,
        `Абстракция`,
        `класс`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы C# туралы дұрыс?`, 
      `Ол .Net Framework бөлігі болып табылады.`, 
      [
        `Оны әртүрлі компьютерлік платформаларда құрастыруға болмайды.`,
        `Ол бағдарламалауға бағытталған.`,
        `төмен деңгейлңбағдарламалау тілі`,
        `каросплатформалық бағдарламалау тілдеріне жатады`
      ],
    ),
    new Test(
      `«Қоғамдық» түйінді сөзі:`, 
      `қатынас модификаторы`, 
      [
        `әріптік`,
        `оператор`,
        `Деректер түрі`,
        `айнымалы тип`
      ],
    ),
    new Test(
      `Бұл операция кезінде не болады: x = y++;`, 
      `у айнымалысының мәнін 1-ге көбейту`, 
      [
        `z айнымалысына у мәнін беру`,
        `Х айнымалысының мәнін 1-ге көбейту`,
        `у мәніне х айнымалысын қосу`,
        `y айнымалысының мәнін 2-ге көбейту`
      ],
    ),
    new Test(
      `C# тіліндегі қай типтер анықтамалық типтерге жатады:`, 
      `массивтер`, 
      [
        `арифметикалық`,
        `құрылымдар`,
        `санау`,
        `логикалық`
      ],
    ),
    new Test(
      `C# тіліндегі қай типтер анықтамалық типтерге жатады:`, 
      `кластар`, 
      [
        `арифметикалық`,
        `құрылымдар`,
        `санау`,
        `логикалық`
      ],
    ),
    new Test(
      `C# және басқа объектілі бағытталған бағдарламалау тілдеріндегі класс анықтамасы мыналарды қамтиды:`, 
      `Әдістер`, 
      [
        `шыңдар`,
        `шытырман оқиға`,
        `жазықтар`,
        `операторлар`
      ],
    ),
    new Test(
      `C# және басқа объектілі бағытталған бағдарламалау тілдеріндегі класс анықтамасы мыналарды қамтиды:`, 
      `өрістер`, 
      [
        `шыңдар`,
        `шытырман оқиға`,
        `жазықтар`,
        `операторлар`
      ],
    ),
    new Test(
      `C# тіліндегі қандай типтер маңызды:`, 
      `логикалық`, 
      [
        `массивтер`,
        `жіптер`,
        `сыныптар`,
        `қатарлар`
      ],
    ),
    new Test(
      `C# тіліндегі маңызды типке жататыны:`, 
      `арифметикалық`, 
      [
        `массивтер`,
        `жіптер`,
        `сыныптар`,
        `стектер`
      ],
    ),
    new Test(
      `C# тіліндегі қандай типтер маңызды:`, 
      `құрылымдар`, 
      [
        `массивтер`,
        `жіптер`,
        `сыныптар`,
        `стектер`
      ],
    ),
    new Test(
      `C# тілінің келесі типтерінің қайсысы маңызды типке жатпайды:`, 
      `массивті анықтайтын тип`, 
      [
        `логикалық`,
        `құрылымды анықтайтын тип`,
        `Double теріңіз`,
        `барлық арифметикалық типтер`
      ],
    ),
    new Test(
      `С# тілінде циклды ұйымдастыру үшін қандай операторларды қолданады?`, 
      `for, while`, 
      [
        `break`,
        `continue`,
        `return, goto`,
        `true, false`
      ],
    ),
    new Test(
      `Бағдарламаның келесі кодын орындау нәтижесінде х неге тең болады: int i=1, x=2; while(i<4){ x++; i++;}`, 
      `5`, 
      [
        `6`,
        `4`,
        `8`,
        `3`
      ],
    ),
    new Test(
      `Айнымалы қасысында дұрыс жазыған:`, 
      `С= 'A';`, 
      [
        `$x = 10;`,
        `x = 0;`,
        `1К=12`,
        `L=f;`
      ],
    ),
    new Test(
      `С# тілінде құрамдас 15 тип бар, олардың қаншауы бүтін сандық типке жатады?`, 
      `сегізі`, 
      [
        `алтауы`,
        `тоғызы`,
        `бесеуі`,
        `оны`
      ],
    ),
    new Test(
      `Символдық тип char қанша биттік символ болып табылады?`, 
      `16-биттік`, 
      [
        `12-биттік`,
        `10-биттік`,
        `15-биттік`,
        `14-биттік`
      ],
    ),
    new Test(
      `try-catch не істейді:`, 
      `Ерекшеліктермен жұмыс істейді`, 
      [
        `Файлдармен жұмыс`,
        `Кластармен жұмыс жасайды`,
        `Функциямен жұмыс жасайды`,
        `Файлдармен жұмыс жасайды`
      ],
    ),
    new Test(
      `Бағдарлама келесі кодты орындау арқылы не істейді: Console.WriteLine("Hello, World!");`, 
      `Жаңа жолға Hello, World! Сөзін шығарады`, 
      [
        `Hello, World!`,
        `Hello, World! барлық мәндерді алып тастаңыз`,
        `Hello, World! Курсор тұрған жолға шығарады`,
        `Ешқандай команда орындалмайды`
      ],
    ),
    new Test(
      `Visual Studio .Net бағдарламасында қандай бағдарламалау тілдерін қолдануға болады?`, 
      `тілдердің саны шектелмейді`, 
      [
        `тек C#`,
        `төрт тілде - Visual C++, C#, Visual Basic, J#`,
        `екі тілде C++, C#`,
        `Visual Basic, J#`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы C# тілінде символды анықтауға мүмкіндік береді?`, 
      `undef`, 
      [
        `region`,
        `endregion`,
        `define`,
        `while`
      ],
    ),
    new Test(
      `Төмендегі әдістердің қайсысы бірнеше мәнді қайтаруға көмектеседі?`, 
      `Output parameters`, 
      [
        `Value parameters`,
        `Reference parameters`,
        `Function parameters`,
        `Prosedure parameters`
      ],
    ),
    new Test(
      `Төмендегі кілт сөздердің қайсысы C# бағдарламасында аттар кеңістігін қосу үшін қолданылады?`, 
      `using`, 
      [
        `exports`,
        `imports`,
        `class`,
        `structure`
      ],
    ),
    new Test(
      `CheckBox және RadioButton басқару элементтерінің мәндерін алу үшін нені пайдаланамыз`, 
      `Checked`, 
      [
        `Locked`,
        `Stacked`,
        `Click`,
        `Dlclick`
      ],
    ),
    new Test(
      `Өзгермелі нүкте деректер түрінің жарамды дәлдік мәніне дейінгі сандар саны?`, 
      `7 цифрға дейін`, 
      [
        `9 цифрға дейін`,
        `8 цифрға дейін`,
        `6 цифрға дейін`,
        `4 цифрға дейін`
      ],
    ),
    new Test(
      `a және b айнымалыларының мәндерін дұрыс жариялау?`, 
      `int a = 32; int b = 40;`, 
      [
        `int a = b = 42;`,
        `int a = 42; b = 40;`,
        `int a = 32, b = 40,6;`,
        `int a = 4.9; b = 40;`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы C# тіліндегі #region -ың соңын белгілейді?`, 
      `endregion`, 
      [
        `error`,
        `warning`,
        `region`,
        `errorkod`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы түрді C# тіліндегі эквивалентті 32-биттік таңбасыз бүтін санға түрлендіреді?`, 
      `ToUInt32`, 
      [
        `ToString`,
        `ToUInt16`,
        `ToType`,
        `Todouble`
      ],
    ),
    new Test(
      `Төмендегі қай тип (бүтін немесе жолдық) C# тілінде күн мен уақыт құрылымдарына түрлендіреді?`, 
      `ToDateTime`, 
      [
        `ToChar`,
        `ToSingle`,
        `ToString`,
        `ToUInt32`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы C# кодындағы белгілі бір орыннан бірінші деңгейлі ескертуді жасауға мүмкіндік береді?`, 
      `warning`, 
      [
        `line`,
        `region`,
        `error`,
        `include`
      ],
    ),
    new Test(
      `C# тіліндегі Array класының келесі қасиеттерінің қайсысы массивтің белгіленген өлшемі бар-жоғын тексереді?`, 
      `IsFixedSize`, 
      [
        `IsStatic`,
        `Length`,
        `string`,
        `float`
      ],
    ),
    new Test(
      `C# тіліндегі код блогының басы неден тұрады?`, 
      `{`, 
      [
        `--/`,
        `**)`,
        `:(`,
        `: /`
      ],
    ),
    new Test(
      `Массив қай жерде дұрыс құрылған?`, 
      `int[] arr = new int[2] {2, 5};`, 
      [
        `int arr = {2, 5};`,
        `int arr = [2, 5];`,
        `int[] arr = new Array [2, 5];`,
        `int arr[] = {2, 5};`
      ],
    ),
    new Test(
      `С# тіліндегі циклден шығу операторы`, 
      `Break`, 
      [
        `Continue`,
        `Goto`,
        `return`,
        `class`
      ],
    ),
    new Test(
      `C# операторларының құрамы мен синтаксисі қай тілден мұраланған`, 
      `C++`, 
      [
        `VB.NET`,
        `Java`,
        `Visual Basic`,
        `C++ builder`
      ],
    ),
    new Test(
      `foreach циклінің негізгі бөлігінде контейнер элементтері неге қол жетімді`, 
      `тек оқуға арналған`, 
      [
        `тек жазу`,
        `оқу да, жазу да`,
        `тек қосымшада`,
        `тек функцияда`
      ],
    ),
    new Test(
      `int айнымалы типіндегі типтік көрсеткіш қалай сипатталады?`, 
      `int*`, 
      [
        `int#`,
        `int$`,
        `int+`,
        `int/`
      ],
    ),
    new Test(
      `String класының қай әдісі қатарларды біріктіреді?`, 
      `CompareTo()`, 
      [
        `Concat()`,
        `Insert()`,
        `repeat`,
        `while`
      ],
    ),
    new Test(
      `Екілік разрядтар бойынша орындалатын операциялар`, 
      `&, ^,`, 
      [
        `%,^,&`,
        `<<, >>`,
        `$, %, ^`,
        `>,<,=,!=`
      ],
    ),
    new Test(
      `Шартты операция-тенарлық операция?`, 
      `? :`, 
      [
        `% &`,
        `<< >>`,
        `$ %`,
        `>,<`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы C# тіліндегі айнымалыларды атауға қатысты дұрыс?`, 
      `Атау әріптерден басталуы керек, одан кейін әріптер тізбегі, сандар (0 - 9) немесе астын сызу болуы мүмкін.`, 
      [
        `Идентификатордағы бірінші таңба цифр бола алады`,
        `Идентификатордағы бірінші таңба орыс алфавитінен басталуы керек`,
        `Идентификатордағы бірінші таңба тек латын алфвитінен басталуы керек`,
        `Идентификатор атауы өрнек бола алады`
      ],
    ),
    new Test(
      `double типті айнымалы сілтемелік типте қалай жазылады?`, 
      `double&`, 
      [
        `double#`,
        `double*`,
        `double`,
        `double$`
      ],
    ),
    new Test(
      `Page нысанының Response әдісі ағымдағы объектен жауаптарды қандай командамен шығарады?`, 
      `Cache`, 
      [
        `Write`,
        `Files`,
        `WritLibe`,
        `ReadLine`
      ],
    ),
    new Test(
      `Төмендегі жазбалардан .NET Framework құрамына кіретін бағдарламалау тілдерін көрсетіңіз:`, 
      `С#, Managed C++, VB.NET`, 
      [
        `С#, C++, Delphi`,
        `Managed C++, FreePascal`,
        `VB.NET, Borlan C++`,
        `Java, Python, C++`
      ],
    ),
    new Test(
      `DataSet нысаны төмендегі нысандардың қайсысын қамтиды?`, 
      `DataTable`, 
      [
        `SelectedItem`,
        `DataGrid`,
        `DataName`,
        `NewData`
      ],
    ),
    new Test(
      `C# тілінде қандай деректер типі іске асырылған?`, 
      `күрделі`, 
      [
        `структуралық`,
        `файлдық`,
        `сілтемелі`,
        `массив`
      ],
    ),
    new Test(
      `Тізімнен бір мәнді таңдау үшін төменде келтірілген компоненттердің қайсысы қолданылады?`, 
      `DataList`, 
      [
        `Radiobutton`,
        `Panel`,
        `Button`,
        `TextBox`
      ],
    ),
    new Test(
      `С# тілінде * белгісі қайда қойылады?`, 
      `Көрсеткіште`, 
      [
        `сілтемеде`,
        `символдық айнымалыда`,
        `құрылымда`,
        `массивте`
      ],
    ),
    new Test(
      `С# тілінде массив индексінің тақтығын тексеру шартының дұрысы:`, 
      `if (i%2= =0)`, 
      [
        `IF (i%2= 1)`,
        `if (i%2= =1)`,
        `if (i%2! =1)`,
        `if(a[i]==0)`
      ],
    ),
    new Test(
      `Z және W айнымалыларын C# тілінде үтірден кейін 2 таңбадан шығару үшін:`, 
      `Concole.WritLine(“z={0,8:F2},w={1,8:F2}”,z,w);`, 
      [
        `Concole.WritLine(z,w);`,
        `Concole.WritLine($“z={0,8:F2},w={3,8:F2}”,z,w);`,
        `Concole.WritLine(“z=1,8:F2),w=(2,8:F2)”);`,
        `Concole.WritLine($“z={1,8:F2},w={2,8:F2}”,z,w);`
      ],
    ),
    new Test(
      `Z және W айнымалыларls C# тілінде Сан үшін 6 позиция форматында шығару үшін:`, 
      `Concole.WritLine(“z={1,6},w={2,6}”,z,w);`, 
      [
        `Concole.WritLine($“z={1,6},w={2,6}”,z,w);`,
        `Concole.WritLine($“z={0,6},w={1,6}”,z,w);`,
        `Concole.WritLine(“z=(1,6),w=(2,6)”,z,w);`,
        `Concole.WritLine($“z={0,6},w={3,6}”,z,w);`
      ],
    ),
    new Test(
      `C#-де тармақталуды программалауды қалай жүзеге асыруға болады?`, 
      `шартты оператор арқылы`, 
      [
        `аталғандардың барлығы арқылы`,
        `таңдау операторы арқылы`,
        `шартты операция арқылы`,
        `циклдік оператор арқылы`
      ],
    ),
    new Test(
      `Var түйінді сөзі нені білдіреді:`, 
      `Айнымалының анық деректер түрі жоқ екенін білдіреді`, 
      [
        `Айнымалының анық деректер типі бар екенін көрсетеді`,
        `Бағдарламалар арасындағы «соғысты» ұйымдастырады`,
        `Бүтін типті білдіреді`,
        `Деректердің нақты типтерін білдіреді`
      ],
    ),
    new Test(
      `TForm-форманың өлшемін орнату үшін қандай қасиетті пайдалануға болады`, 
      `this.Size = new Size(200,150);`, 
      [
        `button.Size = new Size { Width = 80, Height = 30 };`,
        `this.Width = 250; Height = 250;`,
        `this.BackColor = Color.Aquamarine;`,
        `this.Size = Size(200,150);`
      ],
    ),
    new Test(
      `Continue пен break айырмашылығы неде?`, 
      `Continue итерацияны өткізіп жіберіп жалғасытарды, break циклден шығып кетеді`, 
      [
        `Break коммутаторлық регистрлерде қолданылады, ал циклдерде жалғастыру`,
        `Continue жұмыстарды тек циклдарда, қосымша үзіліс әдістерінде`,
        `Continue де break операторы шартта қолданылады`,
        `break операторы ешжерде қолданылады`
      ],
    ),
    new Test(
      `... - бұл программист пен компилятор арасындағы келісім-шарт`, 
      `Интерфейс`, 
      [
        `Функция`,
        `Команда`,
        `Программа`,
        `Цикл`
      ],
    ),
    new Test(
      `FCL кітапханасы:`, 
      `бұл C# тілінің компиляторы пайдалана алатын класс кітапханасы`, 
      [
        `компилятор мен интерпретатор пайдаланатын класс кітапханасы`,
        `MSIL тілінде жазылған модульдерді аударатын JIT трансляторы`,
        `Visual Studio .Net-тің өзін құру үшін қолданылатын сыныптар жиынтығы`,
        `қоқыс жинаушы пайдаланатын компилятор`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы C# тіліндегі динамикалық типке қатысты дұрыс?`, 
      `Динамикалық деректер түрінің айнымалысында мәннің кез келген түрін сақтауға болады.`, 
      [
        `Динамикалық деректер түрінің айнымалысында мәннің кез келген түрін сақтауға болмайды.`,
        `Динамикалық деректер түрінің айнымалысында мәннің бір типін ғана сақтауға болады.`,
        `Динамикалық деректер түрінің типтері әртүрлі болады.`,
        `Динамикалық айнымалы қолданылмайды`
      ],
    ),
    new Test(
      `Берілген объектіге қолдануға болатын ашық операциялардың қатаң анықталған жиыны деп аталады?`, 
      `интерфейс`, 
      [
        `айнымалы`,
        `мұрагерлік`,
        `полиморфизм`,
        `инкапсуляция`
      ],
    ),
    new Test(
      `C# тіліндегі Array класының келесі қасиеттерінің қайсысы массивтің бекітілген (фиксирленген) өлшемі бар-жоғын тексереді?`, 
      `warning`, 
      [
        `line`,
        `region`,
        `error`,
        `include`
      ],
    ),
    new Test(
      `C# - де қандай типтер сілтеме болып табылады:`, 
      `массивтер`, 
      [
        `арифметикалық`,
        `құрылымдар`,
        `санау`,
        `логикалық`
      ],
    ),
    new Test(
      `Бұл кілт сөз:`, 
      `Класстың ағымдағы данасына қол жеткізуді қамтамасыз етеді`, 
      [
        `Java орындалу уақытының ерекшелігі`,
        `Java орындалу уақытының орындалуы`,
        `Java таратылған жинақ`,
        `java-ның орындалуы`
      ],
    ),
    new Test(
      `String класының қандай әдісі жолдарды біріктіреді?`, 
      `CompareTo()`, 
      [
        `Concat()`,
        `Insert()`,
        `repeat`,
        `while`
      ],
    ),
    new Test(
      `C# - де қандай негізгі деректер түрлері бар?`, 
      `сандық, мәтіндік, логикалық`, 
      [
        `тек сандық`,
        `тек мәтіндік`,
        `тек логикалық`,
        `мәтіндік және логикалық`
      ],
    ),
    new Test(
      `Кодтағы түсініктеме (комментерий) дегеніміз не?`, 
      `компилятор еленбеген мәтін`, 
      [
        `кодтағы қате`,
        `айнымалы атауы`,
        `айнымалы мән`,
        `математикалық операция`
      ],
    ),
    new Test(
      `C# тілінде төмендегілердің қайсысы басқа типті 32 биттік бүтін санға айналдырады?`, 
      `ToUInt32`, 
      [
        `ToString`,
        `ToUInt16`,
        `ToType`,
        `Todouble`
      ],
    ),
    new Test(
      `Төмендегі препроцессор директиваларының қайсысы C# тіліндегі #region аяқталуын белгілейді?`, 
      `endregion`, 
      [
        `error`,
        `warning`,
        `region`,
        `errorkod`
      ],
    ),
    new Test(
      `Келесі деректер түрін sbyte, short, long, int шамасын ұлғайту ретімен орналастырыңыз.`, 
      `sbyte < short < int < long`, 
      [
        `sbyte, short, long, int`,
        `short < int < sbyte < long`,
        `short < sbyte < int < long`,
        `long < short < int < sbyte`
      ],
    ),
    new Test(
      `Төмендегі компоненттердің қайсысы тізімнен мәндерді таңдау үшін қолданылады?`, 
      `ListBox`, 
      [
        `Radiobutton`,
        `Panel`,
        `Button`,
        `TextBox`
      ],
    ),
    new Test(
      `C# тіліндегі массив дегеніміз не?`, 
      `бір типті элементтердің жиынтығы`, 
      [
        `мүмкіндіктер жиынтығы`,
        `есімдер тізімі`,
        `сурет`,
        `мәтін жолы`
      ],
    ),
    new Test(
      `listBox1.Items.Add("") әдісті пайдаланған кезде қосылған әрбір элемент тізімнің қай жағынан бастап жалғасып қосылады?`, 
      `тізімнің соңына қосылады`, 
      [
        `тізімнің алдына қосылады`,
        `тізімнің ортасына қосылады`,
        `тізімнің белгіленген орнынан бастап қосылады`,
        `қалаған орынға қосылады`
      ],
    ),
    new Test(
      `Төмендегі түрлердің қайсысы (бүтін немесе жол) C# тілінде datetime құрылымдарына түрлендіреді?`, 
      `ToDateTime`, 
      [
        `ToChar`,
        `ToSingle`,
        `ToString`,
        `ToUInt32`
      ],
    ),
    new Test(
      `Программа фрагментін орындау нәтижесі: x = 0, y = 0, z = x/y;`, 
      `қате болмайды және z айнымалысының мәні NaN болады`, 
      [
        `программаны компиляциялау кезінде қате пайда болады`,
        `программаны орындау кезінде қате пайда болады`,
        `қате болмайды және z айнымалысының мәні шексіздікке тең болады`,
        `қате болмайды және z айнымалысының`
      ],
    ),
    new Test(
      `Бағдарламалық нысанның атауы`, 
      `идентификатор`, 
      [
        `компилятор`,
        `бөлгіштер`,
        `операторлар`,
        `тұрақтылар`
      ],
    ),
    new Test(
      `Осы түйінді сөздердің қайсысы C# тілінде шартты оператордықұру үшін қолданылады?`, 
      `if`, 
      [
        `casebattle`,
        `for`,
        `switchcard`,
        `else`
      ],
    ),
    new Test(
      `Осы деректер түрлерінің қайсысы C# тілінде логикалық мәндерді true немесе false сақтау үшін қолданылады?`, 
      `bool`, 
      [
        `bit`,
        `int`,
        `charder`,
        `string`
      ],
    ),
    new Test(
      `C# тілінде төмендегі қол жеткізу модификаторларының қайсысы класс мүшесін тек осы класстың ішінде қол жетімді етеді?`, 
      `private`, 
      [
        `public`,
        `protected`,
        `internal`,
        `static`
      ],
    ),
    new Test(
      `Осы әдістердің қайсысы C# тілінде консольге мәтін шығару үшін қолданылады?`, 
      `Console.WriteLine()`, 
      [
        `console.print()`,
        `console.output()`,
        `console.Display`,
        `Console.Show`
      ],
    ),
    new Test(
      `C# тілінде жаңа объектіні қалай жасауға болады?`, 
      `new`, 
      [
        `object`,
        `instance`,
        `allow`,
        `copy`
      ],
    ),
    new Test(
      `C# тіліндегі шарт дегеніміз не?`, 
      `белгілі бір шартта ғана орындалатын код бөлігі`, 
      [
        `түсініктеме`,
        `нәтиже`,
        `код шегінісі`,
        `айнымалы атауы`
      ],
    ),
    new Test(
      `C# ішіндегі қандай түрлері ақпараттық типтер болып табылады:`, 
      `сыныптар`, 
      [
        `арифметика`,
        `құрылымдар`,
        `санау`,
        `логикалық`
      ],
    ),
    new Test(
      `Қаріп түсін көрсететін TFont класының қасиеті`, 
      `TColor`, 
      [
        `TName`,
        `TProgram`,
        `TButton`,
        `TMemo`
      ],
    ),
    new Test(
      `Visual Studio бағдарламасында Windows Forms және C# және .NET жобаларына қолдау қосу үшін орнатушыдағы жұмыс жүктемелерінің астынан қандай бағдарламаны таңдау керек.`, 
      `Классикалық .NET қолданбаларын әзірлеу.`, 
      [
        `.NET желісінде мобильді қосымшаларды әзірлеу`,
        `.NET-те әмбебап платформаға арналған қосымшаларды әзірлеу.`,
        `Классикалық С++ қолданбаларын әзірлеу`,
        `Автоматты түрде өзі таңдайды`
      ],
    ),
    new Test(
      `.Net Framework дегеніміз:`, 
      `Басқарылатын кодты іске қосуға арналған ОЖ қондырмасы`, 
      [
        `Компилятор қолданатын класс кітапханасы`,
        `MSIL тілінде жазылған модульдерді аударатын JIT трансляторы`,
        `Visual Studio .Net-тің өзін құрастыру үшін қолданылатын сыныптар жиынтығы`,
        `Қоқыс жинаушы пайдаланатын компилятор`
      ],
    ),
    new Test(
      `C# тілінде textBox2 компонентіне енгізілген мәнді нақты санға түрлендіріп xk айнымалысына меншіктейтін формуланы көрсетіңіз`, 
      `double xk = Convert.ToDouble(textBox2.Text);`, 
      [
        `double xk = Convert.ToInt(textBox2.Text);`,
        `int xk = Convert.ToDouble(textBox2.Text);`,
        `double xk = Convert.ToStrinng(textBox2.Text);`,
        `xk = Convert.Toint(textBox2.Text);`
      ],
    ),
    new Test(
      `C# тілінде textBox2 компонентіне xk мәнін шығару`, 
      `textBox2.Text= Convert.ToString(xk);`, 
      [
        `textBoxquestion. Text= Convert.ToDouble(xk);`,
        `textBox2.Text= Convert.ToString();`,
        `textBox2.Text= Convert.ToInt(xk);`,
        `textBox1.Text= Convert.ToString(xk);`
      ],
    ),
    new Test(
      `xk = Convert.ToDouble(textBox2.Text) - xk мәнінің типі қандай?`, 
      `Нақты`, 
      [
        `Бүтін`,
        `Қатар`,
        `Символ`,
        `Логикалық`
      ],
    ),
    new Test(
      `x = Convert.ToInt32(textBox2.Text) - x мәнінің типі қандай?`, 
      `Нақты`, 
      [
        `Бүтін`,
        `Қатар`,
        `Символ`,
        `Логикалық`
      ],
    ),
    new Test(
      `Convert.ToString(k) -k мәнінің типі ?`, 
      `Қатар`, 
      [
        `Бүтін`,
        `Нақты`,
        `Символ`,
        `Логикалық`
      ],
    ),
    new Test(
      `y=alnx формуласының С# тілінде жазылуы`, 
      `double y = a*Math.Log(x);`, 
      [
        `double y = a*Log(x);`,
        `double y = b*Math.Log(x);`,
        `double y = a*Math.Log(y);`,
        `int y = Math.Log(x);`
      ],
    ),
    new Test(
      `Екі өлшемді массив қалай сипатталады`, 
      `int[,] numbers1=new int [2,2];`, 
      [
        `int[,] num=new int[10];`,
        `int[, ,] numbers2=new int[2,2,3];`,
        `int[, ,] massiv=new [2,2,3];`,
        `int[, ,] num2=int[2,2,3];`
      ],
    ),
    new Test(
      `Үш өлшемді массивті қалай жариялаймыз`, 
      `int[, ,] numbers2=new int[2,2,3];`, 
      [
        `int[,] num=new int[10];`,
        `int[,] numbers1=new int [2,2];`,
        `int[, ,] massiv=new [2,2,3];`,
        `int[, ,] num2=int[2,2,3];`
      ],
    ),
    new Test(
      `Массивтің барлық элементтерінің санын анықтайтиын функция?`, 
      `Length`, 
      [
        `List`,
        `Jagged`,
        `Array`,
        `Massiv`
      ],
    ),
    new Test(
      `Тізімдермен жұмыс істеуге арналған класс`, 
      `List`, 
      [
        `Length`,
        `Jagged`,
        `Array`,
        `Massiv`
      ],
    ),
    new Test(
      `Массив элементтерін тізімге енгізудің бірнеше әдістері бар: Элементті индекске сәйкес келетін орынға қояды, «оң» жағында орналасқан элементтер бір орынға жылжиды`, 
      `Insert([индекс],[элемент])`, 
      [
        `Remove([элемент])`,
        `RemoveAll([элемент])`,
        `RemoveAt([индекс])`,
        `Add([элемент])`
      ],
    ),
    new Test(
      `Массив элементтерін тізімге енгізудің бірнеше әдістері бар: Элементті тізімнің соңына енгізетін команда`, 
      `Add([элемент])`, 
      [
        `Insert([индекс],[элемент])`,
        `RemoveAll([элемент])`,
        `Remove([элемент])`,
        `RemoveAt([индекс])`
      ],
    ),
    new Test(
      `Массив элементтерін тізімге енгізудің бірнеше әдістері бар: Коллекциядағы көрсетілген элемент құрамына енетін алғашқы элементті жояды`, 
      `Remove([элемент])`, 
      [
        `Add([элемент])`,
        `Insert([индекс],[элемент])`,
        `RemoveAll([элемент])`,
        `RemoveAt([индекс])`
      ],
    ),
    new Test(
      `Массив элементтерін тізімге енгізудің бірнеше әдістері бар: Коллекциядағы көрсетілген элемент құрамына енетін барлық элементті жояды`, 
      `RemoveAll([элемент])`, 
      [
        `Remove([элемент])`,
        `Add([элемент])`,
        `Insert([индекс],[элемент])`,
        `RemoveAt([индекс])`
      ],
    ),
    new Test(
      `Массив элементтерін тізімге енгізудің бірнеше әдістері бар: Көрсетілген орында орналасқан элементті жояды`, 
      `RemoveAt([индекс])`, 
      [
        `RemoveAll([элемент])`,
        `Remove([элемент])`,
        `Add([элемент])`,
        `Insert([индекс],[элемент])`
      ],
    ),
    new Test(
      `C# тілінде массив индексі кандай санмен басталады`, 
      `0`, 
      [
        `1`,
        `-1`,
        `2`,
        `3`
      ],
    ),
    new Test(
      `Бір өлшемді массивті кездейсоқ сандармен толтыру және ListBox1-ге мәндерін шығару:`, 
      `for (int i = 0; i < 15; i++) { Mas[i] = rand.Next(-50, 50);ListBox.Items.Add(ConvertToString(Mas[i]));}`, 
      [
        `for (int i = 0; i < 15; i++) { Mas[i] = rand.Next(-50, 50); ListBox.Items.Add(Mas[i]);}`,
        `for (int i = 0; i < 15; i++) { Mas[i] = i*i; ListBox.Items.Add(ConvertToString(Mas[i]));}`,
        `for (int i = 0; i < 15; i++) { ListBox.Items.Add(ConvertToString(Mas[i]));}`,
        `for (int i = 0; i < 15; i++) { Mas[i] = rand.Next(-50, 50); }`
      ],
    ),
    new Test(
      `Екі өлшемді массивтерді кесте түрінде шығару үшін қандай компонент қолданамыз?`, 
      `DataGridView`, 
      [
        `ListBox`,
        `TextBox`,
        `Button`,
        `Label`
      ],
    ),
    new Test(
      `Төменде көрсетілген қай код екінші қатардағы 7-ұяшыққа жұлдызша жазуға мүмкіндік береді.`, 
      `dataGridView1.Rows[2].Cells[7].Value = "*";`, 
      [
        `dataGridView1.Rows[7].Cells[2].Value = "*";`,
        `dataGridView1.Rows[2].Cells[2].Value = "*";`,
        `dataGridView1.Rows[2].Cells[7].Value = "5";`,
        `dataGridView1.Rows[2].Cells[2].Value = "+";`
      ],
    ),
    new Test(
      `Екі өлшемді массивтерді енгізу/шығару және өңдеу үшін қанша цикл қолданылады?`, 
      `2 цикл`, 
      [
        `1 цикл`,
        `3 цикл`,
        `Керек емес`,
        `4 цикл`
      ],
    ),
    new Test(
      `Бір өлшемді массивтерді енгізу/шығару және өңдеу үшін қанша цикл қолданылады?`, 
      `1 цикл`, 
      [
        `2 цикл`,
        `3 цикл`,
        `Керек емес`,
        `4 цикл`
      ],
    ),
    new Test(
      `dataGridView1 компонентінде қатарлар санын қалай белгілейміз, егер 15 ке тең болса`, 
      `dataGridView1.RowCount = 15;`, 
      [
        `dataGridView1.ColumnCount = 15;`,
        `dataGridView1.ColCount = 15;`,
        `dataGridView1.Rows = 15;`,
        `dataGridView1. Columns = 15;`
      ],
    ),
    new Test(
      `dataGridView1 компонентінде бағандар санын қалай белгілейміз, егер 15 ке тең болса`, 
      `dataGridView1.ColumnCount = 15;`, 
      [
        `dataGridView1.RowCount = 15;`,
        `dataGridView1.ColCount = 15;`,
        `dataGridView1.Rows = 15;`,
        `dataGridView1. Columns = 15;`
      ],
    ),
    new Test(
      `listBox1 компонентінің қандай қасиеті таңдалған элементтің нөмірін анықтау үшін пайдаланылады.`, 
      `SelectedIndex`, 
      [
        `IndexSelected`,
        `IndexOf`,
        `Substring`,
        `RemoveAt`
      ],
    ),
    new Test(
      `listBox1 компонентінің SelectedIndex қасиеті не үшін қолданылады`, 
      `таңдалған элементтің нөмірін анықтау үшін`, 
      [
        `элементтерді өшіру үшін`,
        `тізімдегі бар объектілерді сақтау үшін`,
        `қатардың бір бөлігін беру үшін`,
        `элементтерді қосу үшін`
      ],
    ),
    new Test(
      `dataGridView1.ColumnCount = 15; қасиеті не орындайды`, 
      `dataGridView1 компонентінде бағандар санын 15 ке теңестіреді`, 
      [
        `dataGridView1 компонентінде бағандар санын 10 ға теңестіреді`,
        `dataGridView1 компонентінде қатарлар санын 15 ке теңестіреді`,
        `dataGridView1 компонентінде қатарлар санын 14 ке теңестіреді`,
        `dataGridView1 компонентінде қатарлар санын 25 ке теңестіреді`
      ],
    ),
    new Test(
      `dataGridView1.RowCount = 15; қасиеті не орындайды`, 
      `dataGridView1 компонентінде қатарлар санын 15 ке теңестіреді`, 
      [
        `dataGridView1 компонентінде бағандар санын 15 ке теңестіреді`,
        `dataGridView1 компонентінде бағандар санын 10 ға теңестіреді`,
        `dataGridView1 компонентінде қатарлар санын 14 ке теңестіреді`,
        `dataGridView1 компонентінде қатарлар санын 25 ке теңестіреді`
      ],
    ),
    new Test(
      `Төмендегі пішім спецификаторларының қайсысы он алтылық мәндерді басып шығару және шығыс мәнін C# тілінде Сегіздік эквивалент ретінде қайтару үшін пайдаланылады?`, 
      `Біз өз функциямызды жазуымыз керек`, 
      [
        `Шағын әріптер үшін %Ox және бас әріптер үшін %OX`,
        `Шағын әріптер үшін %hx және бас әріптер үшін %HX`,
        `Кіші әріптер үшін %x`,
        `Кіші әріптер үшін %x және бас әріптер үшін %X`
      ],
    ),
    new Test(
      `Динамикалық элементтер қай кезде сипатталады?`, 
      `кері байланыс пайда болғанға дейін`, 
      [
        `void типі пайда болғанға дейін`,
        `массив деректерінің идентификаторлары пайда болғанға дейін`,
        `var типі пайда болғанға дейін`,
        `double типі пайда болғанға дейін`
      ],
    ),
    new Test(
      `Төмендегілердің қайсысы C# тіліндегі айнымалыларды атауға қатысты дұрыс?`, 
      `Идентификатордағы бірінші таңба цифр бола алмайды.`, 
      [
        `Идентификатордағы бірінші таңба цифр бола алады`,
        `Идентификатордағы бірінші таңба орыс алфавитінен басталуы керек`,
        `Идентификатордағы бірінші таңба тек латын алфвитінен басталуы керек`,
        `Идентификатор атауы өрнек бола алады`
      ],
    ),
    new Test(
      `Қандай оператор ақпаратты бүтін типтегі айнымалыға түрлендіреді?`, 
      `a=ConvertToInt32(Concole.ReadLine())`, 
      [
        `b=ConvertToDouble(Concole.ReadLine())`,
        `x= Concole.ReadLine(ConvertToDouble())`,
        `y= Concole.ReadLine(ConvertToInt32())`,
        `m= Concole.ReadLine()`
      ],
    ),
    new Test(
      `Ыңғайлы мәлімдемені және өзгермелі нүкте нөмірін инициализациялауды таңдаңыз:`, 
      `float somevariable = (float) question. 502D`, 
      [
        `float somevariable = (Decimal)question. 502D`,
        `float somevariable = (Double) question. 502D`,
        `float somevariable = question. 502D`,
        `(Double) question. 502D`
      ],
    ),
    new Test(
      `С# тіліндегі функцичның мәнін қайтару операторы`, 
      `return`, 
      [
        `Goto`,
        `Break`,
        `Continue`,
        `while`
      ],
    ),
    new Test(
      `Төмендегі компоненттердің қайсысы тізімнен бір мәнді таңдау үшін қолданылады?`, 
      `ListBox`, 
      [
        `Radiobutton`,
        `Panel`,
        `Button`,
        `TextBox`
      ],
    ),
    new Test(
      `Массив деп нені айтамыз?`, 
      `бір типті элементтердің жиынтығы`, 
      [
        `мүмкіндіктер жиынтығы`,
        `есімдер тізімі`,
        `сурет`,
        `мәтін жолы`
      ],
    ),
    new Test(
      `C# тілі мыналарға мүмкіндік береді:`, 
      `бірнеше интерфейстердің класстық мұрагерлік`, 
      [
        `бірнеше класстардың класстық тұқым қуалауы`,
        `Делегаттық класс мұрасы`,
        `құрылымның класстық тұқым қуалауы`,
        `таптық құрылымы бойынша тұқым қуалау`
      ],
    ),
    new Test(
      `.Net Framework анықтамасы қандай:`, 
      `Басқарылатын кодты іске қосуға арналған ОЖ қондырмасы`, 
      [
        `Компилятор қолданатын класс кітапханасы`,
        `MSIL тілінде жазылған модульдерді аударатын JIT трансляторы`,
        `Visual Studio .Net-тің өзін құрастыру үшін қолданылатын сыныптар жиынтығы`,
        `Қоқыс жинаушы пайдаланатын компилятор`
      ],
    ),
    new Test(
      `JIT – дегеніміз:`, 
      `бұл кодты орындау және оны «just in time» принципі бойынша құрастыру.`, 
      [
        `Visual Studio бағдарламасына кіретін тілдердің біріне арналған компилятор`,
        `қоқыс жинаушы пайдаланатын компилятор`,
        `C# компиляторының компоненті`,
        `компилятор қолданатын класс кітапханасы`
      ],
    ),
    new Test(
      `FCL кітапханасының қызметі:`, 
      `бұл C# тілінің компиляторы пайдалана алатын класс кітапханасы`, 
      [
        `компилятор мен интерпретатор пайдаланатын класс кітапханасы`,
        `MSIL тілінде жазылған модульдерді аударатын JIT трансляторы`,
        `Visual Studio .Net-тің өзін құру үшін қолданылатын сыныптар жиынтығы`,
        `қоқыс жинаушы пайдаланатын компилятор`
      ],
    ),
    new Test(
      `С#-та Visual Studio-де GUI элементтерін жасау үшін қандай компоненттер қолданылады?`, 
      `TextBox, Label, Button`, 
      [
        `String, Integer, Boolean`,
        `Console, Label, Button`,
        `Form, Console`,
        `Label, Console`
      ],
    ),
    new Test(
      `С# WinForms-те Button компонентін қосу үшін қандай класс қолданылады?`, 
      `Button`, 
      [
        `ButtonControl`,
        `ButtonForm`,
        `FormButton`,
        `Form, Console`
      ],
    ),
    new Test(
      `С# WinForms қосымшасында TextBox компонентінің мәнін алу үшін қандай әдіс қолданылады?`, 
      `TextBox.Text`, 
      [
        `TextBox.GetText()`,
        `TextBox.Value`,
        `TextBox.GetValue()`,
        `Form.Console()`
      ],
    ),
    new Test(
      `WinForms қосымшасында екі компоненттің бірінің басқа компоненттің үстіне тиюін болдырмау үшін қандай қасиет қолданылады?`, 
      `BringToFront`, 
      [
        `Dock`,
        `AutoSize`,
        `ZIndex`,
        `Console`
      ],
    ),
    new Test(
      `С# WinForms қосымшасында ComboBox-қа жаңа элемент қосу үшін қандай әдіс қолданылады?`, 
      `ComboBox.Items.Add()`, 
      [
        `ComboBox.Add()`,
        `ComboBox.AddItem()`,
        `ComboBox.Insert()`,
        `Form.Console()`
      ],
    ),
    new Test(
      `С#-та DataGridView компоненті не үшін пайдаланылады?`, 
      `Деректерді көру және өңдеу үшін`, 
      [
        `Пайдаланушының деректерін сақтау үшін`,
        `Файлдарды көрсету үшін`,
        `Мәтін енгізу үшін`,
        `суреттерді көрсету үшін`
      ],
    ),
    new Test(
      `С# WinForms қосымшасында PictureBox компонентіне сурет қою үшін қандай әдіс қолданылады?`, 
      `PictureBox.Image = Image.FromFile("сурет_жолы")`, 
      [
        `PictureBox.Image.Add()`,
        `PictureBox.ImageSet("сурет_жолы")`,
        `PictureBox.LoadImage("сурет_жолы")`,
        `Form. PictureBox(«»)`
      ],
    ),
    new Test(
      `С#-та WinForms қосымшасында Form компонентінің бастапқы өлшемін өзгерту үшін қандай қасиет қолданылады?`, 
      `Form.Width, Form.Height`, 
      [
        `Form.Size`,
        `Form.Extent`,
        `Form.Dimensions`,
        `Form.line`
      ],
    ),
    new Test(
      `С# WinForms қосымшасында Label компонентінің мәтінін өзгерту үшін қандай қасиет қолданылады?`, 
      `Label.Text`, 
      [
        `Label.Content`,
        `Label.LabelText`,
        `Label.String`,
        `Form.Dimensions`
      ],
    ),
    new Test(
      `С#-та Windows Forms қосымшасында әртүрлі компоненттердің орналасуын басқару үшін қандай қасиет қолданылады?`, 
      `Dock`, 
      [
        `Layout`,
        `Alignment`,
        `Position`,
        `Dimensions`
      ],
    ),
    new Test(
      `Chart компонентіндегі Series нені білдіреді?`, 
      `Деректер нүктелерінің жиынтығы`, 
      [
        `Диаграмманың фоны`,
        `Координат жүйесі`,
        `Диаграмма тақырыбы`,
        `диаграмма аймағы`
      ],
    ),
    new Test(
      `Series.ChartType қасиеті не үшін қолданылады?`, 
      `Диаграмма түрін анықтау үшін`, 
      [
        `Деректерді жою үшін`,
        `Форманы жабу үшін`,
        `Диаграмманың түсін өзгерту үшін`,
        `диаграмма нүктелерін анықтау`
      ],
    ),
    new Test(
      `Қай ChartType бағандық диаграммаға сәйкес келеді?`, 
      `Column`, 
      [
        `Line`,
        `Pie`,
        `Area`,
        `Rows`
      ],
    ),
    new Test(
      `Chart компонентіндегі Title қалай қосылады?`, 
      `chart1.Titles.Add("Аты");`, 
      [
        `chart1.AddTitle("Аты");`,
        `chart1.Title = "Аты";`,
        `chart1.Name = "Аты";`,
        `chart1.Titles("Аты");`
      ],
    ),
    new Test(
      `Series-ке деректерді қалай қосуға болады?`, 
      `series.Points.AddXY("A", 10);`, 
      [
        `series.Add("A", 10);`,
        `series.DataSource = "A";`,
        `series.Insert("A", 10);`,
        `series.Points();`
      ],
    ),
    new Test(
      `ChartArea нені білдіреді?`, 
      `Диаграмма бейнеленетін аймақ`, 
      [
        `Диаграммаға фон қою`,
        `Диаграмма өлшемі`,
        `Деректерді сақтау орны`,
        `Диаграмма бағандары`
      ],
    ),
  ];

  export default tests;