import Test from '../testClass.js';

const tests = [
  new Test(
      `Java виртуалды машинасы түсінетін екілік формат қалай аталады?`,
      `Байт-код (байткод)`,
      [
          `аралық тіл (аралық тіл)`,
          `виртуалды код (виртуалды код)`,
          `дерексіз синтаксистік ағаш (дерексіз синтаксистік ағаш)`,
          `Java бағдарламасы`
      ],
  ),
  new Test(
      `JavaDoc комментарий:`,
      `/** Is this a javadoc? */`,
      [
          `/// Is this a Javadoc`,
          `/*! Is this a javadoc? */`,
          `/* Is this a javadoc? */`,
          `// Is this a javadoc?`
      ],
  ),
  new Test(
      `JDK дегеніміз не?`,
      `java development kit`,
      [
          `java deployment kit`,
          `java demo kit`,
          `java distributed kit`,
          `java runtime environment`
      ],
  ),
  new Test(
      `JRE дегеніміз не?`,
      `java runtime environment`,
      [
          `java runtime exception`,
          `java runtime execution`,
          `java distributed kit`,
          `java run execution`
      ],
  ),
  new Test(
      `Генерацияланған .class файлдардың үнсіз келісім бойынша орналасуы:`,
      `.java файлдар орналасқан каталогта`,
      [
          `classes каталогы құрылады`,
          `арнайы  javacкаталогы құрылады`,
          `package каталогы құрылады`,
          `бағдарламаның түпкі каталогына`
      ],
  ),
  new Test(
      `Компиляторды командалық жолдан іске қосу үшін қолданылатын команда:`,
      `javac`,
      [
          `java`,
          `package`,
          `public`,
          `static`
      ],
  ),
  new Test(
      `Java-ға бағдарлама қай әдіс арқылы жүктеледі?`,
      `main әдісі`,
      [
          `кез-келген, жоба баптауында көрсетілген әдіс`,
          `бағдарламаны қосу компилияциялау арқылы орындалады`,
          `static әдісі`,
          `void әдісі`
      ],
  ),
  new Test(
      `Java тілінің негізгі функциясы:`,
      `қосымшаларды әзірлеу үшін`,
      [
          `логикалық өрнектер үшін`,
          `нейрондық желілер үшін`,
          `графиктер құру үшін`,
          `математикалық модельдеу үшін`
      ],
  ),
  new Test(
      `«public» кілттік сөзі не болып табылады?`,
      `ену модификаторы`,
      [
          `литерал`,
          `оператор`,
          `деректер типі`,
          `айнымалы типі`
      ],
  ),
  new Test(
      `Қандай да бір пакет импортталды. Кодта қандай қолжетімділік модификаторы бар класстар қолжетімді болады?`,
      `public`,
      [
          `ешқандай модификатормен белгіленбеген`,
          `кез-келген`,
          `private`,
          `protected`
      ],
  ),
  new Test(
      `Пайдаланушыдан мәліметті алуға жауапты класс қайсы?`,
      `Scanner`,
      [
          `Out`,
          `Line`,
          `System`,
          `Get`
      ],
  ),
  new Test(
      `Пайдаланушының пернетақтадан енгізген мәліметтерін оқуға арналған класс:`,
      `Scanner`,
      [
          `Out`,
          `Line`,
          `System`,
          `Get`
      ],
  ),
  new Test(
      `Айнымалы тек ағымдағы класста көрінуі үшін, қандай қолжетімділік модификаторын қолдану қажет?`,
      `private`,
      [
          `protected`,
          `public`,
          `default`,
          `void`
      ],
  ),
  new Test(
      `Java кодына КОММЕНТАРИЙ қалай қойылады?`,
      `// Бұл комментарий`,
      [
          `/* Бұл комментарий`,
          `## Бұл комментарий`,
          `# Бұл комментарий`,
          `** Бұл комментарий`
      ],
  ),
  new Test(
      `Java қосымшасын командалық жолдан іске қосу үшін қолданылатын команда:`,
      `javac`,
      [
          `java`,
          `com`,
          `run`,
          `play`
      ],
  ),
  new Test(
      `Объект құру кезінде автоматты түрде шақырылатын әдіс:`,
      `конструктор`,
      [
          `деструктор`,
          `идентификатор`,
          `модификатор`,
          `поток`
      ],
  ),
  new Test(
      `AWT дегенім не?`,
      `Abstract Window Toolkit`,
      [
          `Abstract Window Task`,
          `Area Window Toolkit`,
          `Arial Window Toolkit`,
          `Abstract Win Toolkit`
      ],
  ),
  new Test(
      `Құжаттық ақпаратқа арналған көпжолдық комментарий:`,
      `/** комментарий */`,
      [
          `/* комментарий */`,
          `//комментарий`,
          `/комментарий/`,
          `{коментарий}`
      ],
  ),
  new Test(
      `Көпжолдық комментарий:`,
      `/*комментарий */`,
      [
          `/**комментарий */`,
          `//комментарий`,
          `/комментарий/`,
          `{коментарий}`
      ],
  ),
  new Test(
      `Біржолдық комментарий:`,
      `//комментарий`,
      [
          `/**комментарий */`,
          `/*комментарий */`,
          `/комментарий/`,
          `{коментарий}`
      ],
  ),
  new Test(
      `Java-да ең үлкен әзірлеушілер қауымдастығын дамыту үшін қандай IDE бар?`,
      `Eclipse`,
      [
          `IntelliJ IDEA`,
          `NetBeans`,
          `Codenvy`,
          `Kotlin`
      ],
  ),
  new Test(
      `Android Studio негізінде қандай әзірлеу ортасы жатыр?`,
      `IntelliJ IDEA`,
      [
          `Eclipse`,
          `Codenvy`,
          `NetBeans`,
          `Kotlin`
      ],
  ),
  new Test(
      `«public» кілттік сөзі не болып табылады?`,
      `ену модификаторы`,
      [
          `литерал`,
          `меншіктеу операторы`,
          `объект  әдісі`,
          `объект класы`
      ],
  ),
  new Test(
      `Java-да жасалған қосымшаларды құрайтын негізгі блоктар қалай аталады?`,
      `Класстар`,
      [
          `Әдістер`,
          `Объектілер`,
          `Литералдар`,
          `Модификатор`
      ],
  ),
  new Test(
      `Класс атауы неден басталады?`,
      `әріптен`,
      [
          `кез-келген символдан`,
          `цифрдан`,
          `# символынан`,
          `$ символынан`
      ],
  ),
  new Test(
      `Java виртуалды машинасы өз жұмысын бастайтын әдіс қалай аталады?`,
      `main()`,
      [
          `start()`,
          `go()`,
          `get()`,
          `set()`
      ],
  ),
  new Test(
      `«class» кілттік сөзінен кейін не жазылады?`,
      `класс атауы`,
      [
          `ену модификаторы`,
          `деректер типі`,
          `литерал`,
          `объект әдісі`
      ],
  ),
  new Test(
      `Әдіс параметрлері басқаша қалай аталады?`,
      `Аргументтер`,
      [
          `Мәндер`,
          `Литералдар`,
          `Класстар`,
          `Объектілер`
      ],
  ),
  new Test(
      `System.out.println() экранға шақырылған кезде не шығады?`,
      `бос қатар`,
      [
          `ешнәрсе`,
          `Java нұсқасы`,
          `комментарий`,
          `леп белгісі`
      ],
  ),
  new Test(
      `Ақпаратты консольға шығаруға арналған әдіс:`,
      `println()`,
      [
          `Buffered`,
          `import`,
          `read()`,
          `Line()`
      ],
  ),
  new Test(
      `Объектіге-бағытталған бағдарламалау тілдерін көрсетіңіз:`,
      `C++, Visual Basic, Java`,
      [
          `Pascal, Delphi, Project`,
          `Basic, Net Beans, HTML`,
          `Pascal, Basic`,
          `RationalRose`
      ],
  ),
  new Test(
      `Объект құратын шаблон:`,
      `класс`,
      [
          `идетификатор`,
          `әдіс`,
          `тип`,
          `айнымалы`
      ],
  ),
  new Test(
      `Java класстар иерархиясының басында не орналасады?`,
      `обьект`,
      [
          `класс`,
          `әдіс`,
          `айнымалы`,
          `символ`
      ],
  ),
  new Test(
      `Унарлық операцияға қанша операнд қатысады?`,
      `бір`,
      [
          `екі`,
          `үш`,
          `бірнеше`,
          `бес`
      ],
  ),
  new Test(
      `Бүтін тұрақтының өлшемi:`,
      `2 байт`,
      [
          `1 байт`,
          `4 байт`,
          `8 байт`,
          `7 байт`
      ],
  ),
  new Test(
      `float типті тұрақтының өлшемi:`,
      `4 байт`,
      [
          `2 байт`,
          `1 байт`,
          `5 байт`,
          `8 байт`
      ],
  ),
  new Test(
      `double типті тұрақтының өлшемi:`,
      `8 байт`,
      [
          `6 байт`,
          `4 байт`,
          `1 байт`,
          `7 байт`
      ],
  ),
  new Test(
      `byte типі – бұл:`,
      `Белгілі 8-биттік тип`,
      [
          `Белгілі 9- биттік тип`,
          `Белгілі 10- биттік тип`,
          `Белгілі 12- биттік тип`,
          `Белгілі 14- биттік тип`
      ],
  ),
  new Test(
      `byte типінің мәндер диапазоны?`,
      `-128 - 127`,
      [
          `-130 - 131`,
          `-140 - 141`,
          `-150 - 151`,
          `-145 - 146`
      ],
  ),
  new Test(
      `short типі - бұл?`,
      `16- биттік тип`,
      [
          `18- биттік тип`,
          `19- биттік тип`,
          `20- биттік тип`,
          `21- биттік тип`
      ],
  ),
  new Test(
      `short типінің диапазоны?`,
      `-32768 - 32767`,
      [
          `-30000 - 32767`,
          `-32000 - 32767`,
          `-31005 - 32767`,
          `-32555 - 32767`
      ],
  ),
  new Test(
      `int типі-бұл:`,
      `32- биттік бүтін сан таңбасымен`,
      [
          `42- биттік бүтін сан таңбасымен`,
          `52- биттік бүтін сан таңбасымен`,
          `62- биттік бүтін сан таңбасымен`,
          `22- биттік бүтін сан таңбасымен`
      ],
  ),
  new Test(
      `long типті тұрақтының өлшемі:`,
      `64-бит`,
      [
          `32-бит`,
          `22-бит`,
          `62-бит`,
          `52-бит`
      ],
  ),
  new Test(
      `long типі-бұл:`,
      `64- биттік сан таңбасымен`,
      [
          `32- биттік сан таңбасымен`,
          `22- биттік сан таңбасымен`,
          `62- биттік сан таңбасымен`,
          `52- биттік сан таңбасымен`
      ],
  ),
  new Test(
      `Java тілінде char типінің разряды?`,
      `16 бит`,
      [
          `18 бит`,
          `20 бит`,
          `22 бит`,
          `24 бит`
      ],
  ),
  new Test(
      `Байттық айнымалының өлшемі нешеге тең?`,
      `8 bit`,
      [
          `32 bit`,
          `64 bit`,
          `48 bit`,
          `68 bit`
      ],
  ),
  new Test(
      `Java тілінде boolean типі не үшін қолданылады?`,
      `Логикалық мәнді сақтау үшін`,
      [
          `Символды сақтау үшін`,
          `Санды сақтау үшін`,
          `Типті сақтау үшін`,
          `Мәнді сақтау үшін`
      ],
  ),
  new Test(
      `Массивті хабарлау үшін қандай жақша қолданады?`,
      `Квадрат жақша`,
      [
          `Фигуралы жақша`,
          `Дөңгелек жақша`,
          `Тырнақша`,
          `Қолданбайды`
      ],
  ),
  new Test(
      `%с форматының спецификаторы:`,
      `Символ`,
      [
          `Бүтiн`,
          `Танбасыз бүтiн`,
          `Жол`,
          `Нақты сан`
      ],
  ),
  new Test(
      `%d форматының спецификаторы:`,
      `Бүтін ондық сан`,
      [
          `Символ, символдардың сипаттамасы`,
          `Қатар`,
          `Нақты сан`,
          `Жол`
      ],
  ),
  new Test(
      `%е форматының спецификаторы:`,
      `ғылыми жазбадағы ондық сан`,
      [
          `символ немесе бүтін ондық сан`,
          `қатар`,
          `нақты сан`,
          `жол`
      ],
  ),
  new Test(
      `%f форматының спецификаторы:`,
      `қалқымалы үтірмен ондық сан`,
      [
          `ғылыми жазбадағы ондық сан`,
          `қатар`,
          `нақты сан`,
          `жол`
      ],
  ),
  new Test(
      `%о форматының спецификаторы:`,
      `8-дік сан`,
      [
          `символ`,
          `16-лық сан`,
          `10-дық сан`,
          `6-лық сан`
      ],
  ),
  new Test(
      `%s форматының спецификаторы:`,
      `Символдар қатары`,
      [
          `Символ`,
          `Бүтін сан`,
          `Бөлшек сан`,
          `х..хе+х түріндегі жолдық сан`
      ],
  ),
  new Test(
      `%x форматының спецификаторы:`,
      `16-лық сан`,
      [
          `символ`,
          `6-лық сан`,
          `8-дік сан`,
          `10-дық сан`
      ],
  ),
  new Test(
      `Java-да объектіге бағытталған бағдарламалаудың базалық элементі:`,
      `Класс`,
      [
          `Әдіс`,
          `Объект`,
          `Тип`,
          `Файл`
      ],
  ),
  new Test(
      `Мәндердің қайсысын тұрақты деп жариялаған дұрыс?`,
      `Pi санын`,
      [
          `шоттағы соманы`,
          `жылдамдық`,
          `уақыт`,
          `қалдық`
      ],
  ),
  new Test(
      `Төмендегілердің қайсысы қарапайым деректер типі болып табылады?`,
      `int, char`,
      [
          `String`,
          `Boolean`,
          `int[]`,
          `integer`
      ],
  ),
  new Test(
      `Тернарнық оператор - бұл:`,
      `? :`,
      [
          `&&`,
          `!`,
          `^`,
          `||`
      ],
  ),
  new Test(
      `Есептеу ретін анықтауға не мүмкіндік береді?`,
      `дөңгелек жақшалар ()`,
      [
          `Фигурные скобки {}`,
          `Квадратные скобки []`,
          `Операция деления //`,
          `Знак процента %%`
      ],
  ),
  new Test(
      `Бинарлық операцияға қанша операнд қатысады?`,
      `Екі`,
      [
          `Бір`,
          `Үш`,
          `Бірнеше`,
          `Бес`
      ],
  ),
  new Test(
      `Бір операндпен орындалатын операциялар қалай аталады?`,
      `Унарлы`,
      [
          `Бірлік`,
          `Бір`,
          `Екілік`,
          `Эквивалентті`
      ],
  ),
  new Test(
      `Қалдықпен бөлу операциясы қандай белгінің көмегімен жүзеге асырылады?`,
      `%`,
      [
          `/`,
          `:`,
          `//`,
          `-`
      ],
  ),
  new Test(
      `Айнымалы мәнді бірлікке көбейтетін арттыру операторы қалай аталады?`,
      `Инкремент`,
      [
          `Декремент`,
          `Эквивалент`,
          `Сумма`,
          `Процент`
      ],
  ),
  new Test(
      `Бүтінсандық деректер типі:`,
      `byte, short, int, long`,
      [
          `float, double`,
          `float, double, long`,
          `char, string`,
          `byte, short, string, float`
      ],
  ),
  new Test(
      `Осы бөлу әрекетін орындағаннан кейін x айнымалысында қандай мән болады? double x = 10 % 4;`,
      `2`,
      [
          `2.5`,
          `3`,
          `4`,
          `5`
      ],
  ),
  new Test(
      `Осы бөлу әрекетін орындағаннан кейін x айнымалысында қандай мән болады? int x = 10 % 4;`,
      `2`,
      [
          `2.5`,
          `3`,
          `4`,
          `5`
      ],
  ),
  new Test(
      `Бұл кодта алдымен қандай операция орындалады? int x = 100 / 2 * 3;`,
      `бөлу`,
      [
          `көбейту`,
          `бүтін санды бөлу`,
          `кері тәртіпте жасалатын операциялар`,
          `қосу`
      ],
  ),
  new Test(
      `Бұл әрекетті орындау барысында алдымен не болады: x = y++;`,
      `айнымалы y мәнін 1-ге ұлғайту`,
      [
          `z айнымалысына y мәнін тағайындау`,
          `айнымалы х мәнін 1-ге ұлғайту`,
          `айнымалы х мәнін у-ке қосу`,
          `айнымалы y мәнін 2-ге ұлғайту`
      ],
  ),
  new Test(
      `Осы кодты орындау нәтижесінде а айнымалысында қандай мән болады? int a, b; b = 2; a = ++b;`,
      `3`,
      [
          `2`,
          `қате шығады`,
          `8`,
          `4`
      ],
  ),
  new Test(
      `hashCode(), equals() және toString() әдістерінің ену модификаторлары?`,
      `public`,
      [
          `protected`,
          `private`,
          `static`,
          `void`
      ],
  ),
  new Test(
      `Келесі код нені шығарады? double x = 95 / 10;`,
      `9.5`,
      [
          `9`,
          `10`,
          `90`,
          `95`
      ],
  ),
  new Test(
      `Айнымалы мәнін 1-ге арттыратын оператор:`,
      `инкремент`,
      [
          `декремент`,
          `нет такого оператора`,
          `амперсенд`,
          `исключение`
      ],
  ),
  new Test(
      `Функция неше параметр қабылдай алады?`,
      `шексіз`,
      [
          `1 ден артық емес`,
          `3 тен артық емес`,
          `25 тен артық емес`,
          `2 ден артық емес`
      ],
  ),
  new Test(
      `Қарапайым айнымалы қай жерде дұрыс құрылған?`,
      `float x = 2.3;`,
      [
          `bool isDone = true;`,
          `char str = 'ab';`,
          `int[] a;`,
          `byte x = 100000;`
      ],
  ),
  new Test(
      `Жолдық айнымалы (String) үшін үнсіз келісім бойынша қандай мән беріледі?`,
      `null`,
      [
          `‘’`,
          `“”`,
          `1`,
          `0`
      ],
  ),
  new Test(
      `Үнсіз келісім бойынша int айнымалысының мәні қандай?`,
      `0`,
      [
          `0,0`,
          `анықталмаған`,
          `1`,
          `3`
      ],
  ),
  new Test(
      `Қалқымалы үтірмен 2,8 айнымалысын қалай жазуға болады?`,
      `float x = 2.8f;`,
      [
          `byte x = 2.8f`,
          `int x = 2.8f;`,
          `x = 2.8f;`,
          `char=2;`
      ],
  ),
  new Test(
      `Деректердің бүтінсандық типтеріне жатады:`,
      `byte, short, int, long`,
      [
          `float и double`,
          `float, double, long`,
          `char, string`,
          `byte, short, string, float`
      ],
  ),
  new Test(
      `Нақты сандармен жұмыс істеуде қолданылатын типтер:`,
      `float, double`,
      [
          `float, double, short`,
          `float, double, long`,
          `char, string`,
          `byte, short, string, float`
      ],
  ),
  new Test(
      `Кодта тұрақтыға мәнді қанша рет тағайындауға болады?`,
      `тек бір рет`,
      [
          `екі рет`,
          `шексіз рт`,
          `үш рет`,
          `қолданған сайын`
      ],
  ),
  new Test(
      `Массив элементтеріне ортақ ұғым:`,
      `ондағы деректер типі`,
      [
          `өлшемдері`,
          `жадтан орын алатын адрестері`,
          `әрқайсының атаулары`,
          `жадтағы орны`
      ],
  ),
  new Test(
      `Көп өлшемді массив элементіне мәннің дұрыс тағайындалуы:`,
      `a[0][0] = 1;`,
      [
          `a[0, 0] = 1;`,
          `a(0)(0) = 1;`,
          `a{0}{0} = 1;`,
          `a[0 0] = 1;`
      ],
  ),
  new Test(
      `Әрбір файл қалай аталуы керек:`,
      `ондағы класс атауымен`,
      [
          `кез-келген атаумен`,
          `ондағы әдіс атауымен`,
          `пакет атауымен`,
          `бірінші кітахана атауымен`
      ],
  ),
  new Test(
      `Осы бөлу әрекетін орындағаннан кейін x айнымалысында қандай мән болады? double x = 12 / 5;`,
      `2.4`,
      [
          `2,5‬`,
          `2`,
          `4`,
          `5`
      ],
  ),
  new Test(
      `Бұл кодта алдымен қандай операция орындалады? int x = 30 / 5 * 3;`,
      `бөлу`,
      [
          `көбейту`,
          `бүтінсанды бөлу`,
          `кері ретпен`,
          `қосу`
      ],
  ),
  new Test(
      `Дұрыс жазылған идентификатор?`,
      `_int`,
      [
          `2int`,
          `- int_#`,
          `#int`,
          `_#int`
      ],
  ),
  new Test(
      `&& операторы нені білдіреді?`,
      `Логикалық «ЖӘНЕ» (AND)`,
      [
          `Биттік «Немесе» (OR)`,
          `Биттер санынан солға ығысу`,
          `Таңбасыз оңға биттік жылжу`,
          `«Немесе» жоққа шығады (XOR)`
      ],
  ),
  new Test(
      `|| операторы нені білдіреді?`,
      `Логикалық «Немесе» (OR)`,
      [
          `Логикалық «Және» (AND)`,
          `Биттер санынан солға ығысу`,
          `Таңбасыз оңға биттік жылжу`,
          `«Немесе» жоққа шығады (XOR)`
      ],
  ),
  new Test(
      `<< операторы нені білдіреді?`,
      `Биттер санынан солға ығысу`,
      [
          `Логикалық «Және» (AND)`,
          `Логикалық «Немесе» (OR)`,
          `Таңбасыз оңға биттік жылжу`,
          `«Немесе» жоққа шығады (XOR)`
      ],
  ),
  new Test(
      `>> операторы нені білдіреді?`,
      `Биттер санынан оңға ығысу`,
      [
          `Логикалық «Және» (AND)`,
          `Логикалық «Немесе» (OR)`,
          `Биттер санынан солға ығысу`,
          `«Немесе» жоққа шығады (XOR)`
      ],
  ),
  new Test(
      `Егер m=20 болса, m+=5 операциясының мәні неге тең?`,
      `25`,
      [
          `15`,
          `20`,
          `100`,
          `5`
      ],
  ),
  new Test(
      `Егер n=10 болса, n*=3 операциясының мәні неге тең?`,
      `30`,
      [
          `13`,
          `7`,
          `1000`,
          `10`
      ],
  ),
  new Test(
      `Егер n=15 болса, n/=3 операциясының мәні неге тең?`,
      `5`,
      [
          `45`,
          `18`,
          `56`,
          `12`
      ],
  ),
  new Test(
      `Егер n=20 болса, n - =4 операциясының мәні неге тең?`,
      `16`,
      [
          `24`,
          `80`,
          `65`,
          `4`
      ],
  ),
  new Test(
      `Java-да символ дегеніміз:`,
      `UNICODE символдарындағы индекстер`,
      [
          `таңбалар индекстері`,
          `индекстер, көрсеткіштер және операторлар`,
          `таңба кестесі`,
          `таңба кестесінің массиві`
      ],
  ),
  new Test(
      `Java-да жолдық литерлер дегеніміз-`,
      `("") тырнақшадағы еркін текст`,
      [
          `() жақшадағы еркін текст`,
          `{} фигуралы жақшадағы еркін текст`,
          `Еркін текст`,
          `Апострофтағы еркін текст`
      ],
  ),
  new Test(
      `Қай қатарда шығару дұрыс жазылған?`,
      `System.out.print("Hello World!");`,
      [
          `System.out.println = "Hello World!";`,
          `print("Hello World!");`,
          `System.out("Hello World!");`,
          `System.print("Hello World!");`
      ],
  ),
  new Test(
      `JFrame () конструкторы не құрады?`,
      `Бос терезе`,
      [
          `Панель`,
          `Терезе тақырыбымен`,
          `Класс`,
          `Элемент`
      ],
  ),
  new Test(
      `Графикалық интерфейсті құру үшін қолданылатын кітапхана:`,
      `AWT және Swing`,
      [
          `JDK және JRE`,
          `Scanner`,
          `javax`,
          `GUI және IDE`
      ],
  ),
  new Test(
      `Массивке жадтан орын дайындайтын оператор?`,
      `Арнайы new операторы`,
      [
          `IOException, if операторы`,
          `then операторы`,
          `else операторы`,
          `Еркін текст`
      ],
  ),
  new Test(
      `Java-да объектіге-бағытталған тәсілдеменің фундаменталды қасиеті:`,
      `Мұрагерлік`,
      [
          `Конструктор`,
          `Объект`,
          `Әдіс`,
          `Класс`
      ],
  ),
  new Test(
      `Java-да объектіге-бағытталған тәсілдеменің фундаменталды қасиеті:`,
      `Инкапсуляция`,
      [
          `Конструктор`,
          `Объект`,
          `Әдіс`,
          `Класс`
      ],
  ),
  new Test(
      `Java-да объектіге-бағытталған тәсілдеменің фундаменталды қасиеті:`,
      `Полиморфизм`,
      [
          `Конструктор`,
          `Объект`,
          `Әдіс`,
          `Класс`
      ],
  ),
  new Test(
      `\\b басқару тізбегі нені білідреді?`,
      `Бір символ артқа қайтару`,
      [
          `Қоңырау`,
          `Жаңа бетке ауыстыру`,
          `Жаңа жолға ауысу`,
          `Жолдың басына қайтару`
      ],
  ),
  new Test(
      `\\f басқару тізбегі нені білідреді?`,
      `Жаңа бетке ауысу`,
      [
          `Бір символ артқа қайтару`,
          `Қоңырау`,
          `Жаңа жолға ауыстыру`,
          `Жолдың басына қайтару`
      ],
  ),
  new Test(
      `\\n басқару тізбегі нені білідреді?`,
      `Жаңа жолға ауыстыру`,
      [
          `Бір символ артқа қайтару`,
          `Жаңа бетке ауыстыру`,
          `Қоңырау`,
          `Жолдың басына қайтару`
      ],
  ),
  new Test(
      `\\r басқару тізбегі нені білідреді?`,
      `Жолдың басына қайтару`,
      [
          `Бір символ артқа қайтару`,
          `Жаңа бетке ауыстыру`,
          `Жаңа жолға ауыстыру`,
          `Қоңырау`
      ],
  ),
  new Test(
      `\\t басқару тізбегі нені білідреді?`,
      `Көлденең табуляция`,
      [
          `Вертикальді табуляция`,
          `Тырнақша`,
          `Қос тырнақша`,
          `Ирек жақша`
      ],
  ),
  new Test(
      `\\v басқару тізбегі нені білідреді?`,
      `Вертикальді табуляция`,
      [
          `Көлденең табуляция`,
          `Тырнақша`,
          `Қос тырнақша`,
          `Ирек жақша`
      ],
  ),
  new Test(
      `\\’ басқару тізбегі нені білідреді?`,
      `Апостроф символы`,
      [
          `Көлденең табуляция`,
          `Вертикальді табуляция`,
          `Қос тырнақша`,
          `Ирек жақша`
      ],
  ),
  new Test(
      `\\” басқару тізбегі нені білдреді?`,
      `Қос тырнақша`,
      [
          `Көлденең табуляция`,
          `Тырнақша`,
          `Вертикальді табуляция`,
          `Кері қиғаш сызық`
      ],
  ),
  new Test(
      `\\\\ басқару тізбегі нені білідреді?`,
      `Кері қиғаш сызық`,
      [
          `Көлденең табуляция`,
          `Тырнақша`,
          `Вертикальді табуляция`,
          `Қос тырнақша`
      ],
  ),
  new Test(
      `\\u басқару тізбегі нені білідреді?`,
      `Unicode символын кодтау`,
      [
          `Көлденең табуляция`,
          `Қос тырнақша`,
          `Вертикальді табуляция`,
          `Кері қиғаш сызық`
      ],
  ),
  new Test(
      `Массивтің бірінші элементіне қай жерде мән дұрыс тағайындалған?`,
      `a[0][0] = 1;`,
      [
          `a[0, 0] = 1;`,
          `a(0)(0) = 1;`,
          `a{0}{0} = 1;`,
          `a[0 0] = 1;`
      ],
  ),
  new Test(
      `Шығару қай жерде дұрыс жазылған?`,
      `System.out.print("Java программирование");`,
      [
          `System.out("Java программирование");`,
          `System.print("Java программирование");`,
          `print("Java программирование ");`,
          `System.out.print = "Java программирование";`
      ],
  ),
  new Test(
      `Мәтінмен жұмыс істеуде қолданылатын Java-класстар:`,
      `String және StringBuffer`,
      [
          `InputStream және OutputStream`,
          `FileInputStream және FileOutputStream`,
          `Scanner`,
          `Read және Write`
      ],
  ),
  new Test(
      `JFrame класының панельді көрсетуге арналған әдісі:`,
      `getContentPane`,
      [
          `setSize`,
          `setVisible`,
          `main`,
          `getComponentCount`
      ],
  ),
  new Test(
      `Қатарды консольға шығару класының дұрыс жазылуы:`,
      `System.out.print("Hello World!");`,
      [
          `System.out("Hello World!");`,
          `System.print("Hello World!");`,
          `print("Hello World!");`,
          `System.out.print = "Hello World!";`
      ],
  ),
  new Test(
      `Құрамына өзге элементтер кіретін эелемент:`,
      `Контейнер`,
      [
          `Конструктор`,
          `Әдіс`,
          `Класс`,
          `Панель`
      ],
  ),
  new Test(
      `Компиляторды көрсету үшін қандай кілт қолданылады? Генерацияланған .class файлдар қайда жазылады?`,
      `-d`,
      [
          `-cp`,
          `-sourcepath`,
          `-f`,
          `-javac`
      ],
  ),
  new Test(
      `Егер ол суперкласспен бірдей пакетте орналасқан болса, ішкі класста қандай әдістерді қайта анықтауға болады?`,
      `protected`,
      [
          `public`,
          `private`,
          `final`,
          `void`
      ],
  ),
  new Test(
      `Интерфейсте мүмкін болатын жарияланымды көрсетіңіз:`,
      `public static int START = 1;`,
      [
          `protected int START = 1;`,
          `final void go(int start);`,
          `transient int START = 1;`,
          `private int getArea();`
      ],
  ),
  new Test(
      `Санау тұрақтыларын қалай салыстыруға болады?`,
      `== операциясын қолдануға болады`,
      [
          `equals() әдісін қолдануға болады`,
          `тек сілтемелі типтермен`,
          `примитивті типтермен`,
          `сілтемелі және примитивті типтермен`
      ],
  ),
  new Test(
      `instanceof операторын қандай айнымалылармен қолдануға болады?`,
      `тек сілтемелі айнымалылармен`,
      [
          `тек примитивті айнымалылармен`,
          `сілтемелі және примитивті типтермен`,
          `бүтінсандық типтермен`,
          `жолдық және символдық типтермен`
      ],
  ),
  new Test(
      `«this»кілттік сөзі не үшін қолданылады?`,
      `класстың ішіндегі ағымдағы класс объектісіне көрсеткіш`,
      [
          `класстың қайта анықталған әдісіне көрсеткіш`,
          `бұл кілт сөз емес`,
          `тұрақты әдіс ішіндегі әдеттегі әдісті шақыруға арналған кілт сөз`,
          `бұл кілт сөз`
      ],
  ),
  new Test(
      `Java-дағы ерекшеліктердің барлық түрлері қандай кіріктірілген класстың ішкі класстары болып табылады?`,
      `Throwable`,
      [
          `Exception`,
          `RuntimeException`,
          `Error`,
          `Exceptions`
      ],
  ),
  new Test(
      `Пайдаланушының бағдарламалары ұстап қалуы керек ерекше жағдайларды өңдеу үшін қандай класс қолданылады?`,
      `Exception`,
      [
          `RuntimeException`,
          `Throwable`,
          `Error`,
          `Exceptions`
      ],
  ),
  new Test(
      `Компьютердің файлдық жүйесінде пакет иерархиясының бірнеше түбірлік каталогтары қандай ортада сақталады?`,
      `CLASSPATH`,
      [
          `PACKAGEROOT`,
          `ROOT`,
          `CLASSROOT`,
          `PACKAGEPATH`
      ],
  ),
  new Test(
      `Импортталған пакетте қандай ену модификаторының класы қолжетімді?`,
      `public`,
      [
          `ешқандай`,
          `любые`,
          `private`,
          `protected`
      ],
  ),
  new Test(
      `Java атқарушы жүйесі жұмыс уақытының ортасына қатысты қателерді көрсету үшін қай классты қолданады?`,
      `RuntimeException`,
      [
          `Exception`,
          `Throwable`,
          `private`,
          `Exceptions`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int x =125121148; System.out.println(++x);}`,
      `125121149`,
      [
          `125121148`,
          `компиляция кезіндегі қателік`,
          `орындалу кезіндегі қателік`,
          `559849847`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {double a = 5; System.out.println(a/2);}`,
      `2.5`,
      [
          `unhandled exception`,
          `2`,
          `1`,
          `5`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {double a = 5; System.out.println(a%2);}`,
      `1`,
      [
          `5`,
          `2`,
          `0`,
          `unhandled exception`
      ],
  ),
  new Test(
      `Кодтың берілген фрагменті жұмысының нәтижесі қандай болады?  for (;;) { }`,
      `шексіз цикл`,
      [
          `орындалу кезеңіндегі қателік`,
          `код ешқашан орындалмайды`,
          `компиляция кезеңіндегі қателік`,
          `unhandled exception`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) { System.out.println(1.0/0);}`,
      `Infinity`,
      [
          `код орындауға жіберілмейді`,
          `ArithmeticException: / by zero`,
          `NAN`,
          `unhandled exception`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {String s = "Hello"; System.out.println(s + (5 + 4));}`,
      `Hello9`,
      [
          `Hello 5 4`,
          `Hello 5`,
          `Hello_9`,
          `unhandled exception`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {double a = 5;  System.out.println(int(a/2));}`,
      `2`,
      [
          `1,5`,
          `1`,
          `unhandled exception`,
          `5`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int a = 5; System.out.println(a + "2");}`,
      `52`,
      [
          `7`,
          `5+2`,
          `8`,
          `unhandled exception`
      ],
  ),
  new Test(
      `Java-да бағдарламаны іске қосудың қандай әдісі бар?`,
      `кез-келген класстың  main() әдісінен`,
      [
          `алдымен, класста не жазылды және оның ішінде қандай әдіс бар сол арқылы`,
          `бағдарламаны іске қосу компиляция арқылы жүргізіледі`,
          `кез-келген, оны жоба баптауларында беруге болады`,
          `негізгі әдіс жоқ`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {byte x = 12; x += 3; System.out.println(x);}`,
      `15`,
      [
          `-127`,
          `runtime error`,
          `compile error`,
          `458`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {byte x = 127; x += 2; System.out.println(x);}`,
      `-127`,
      [
          `129`,
          `runtime error`,
          `compile error`,
          `458`
      ],
  ),
  new Test(
      `Массивтің соңғы элементінің индексі қалай көрсетіледі?`,
      `array.length-1;`,
      [
          `array.length;`,
          `array.size;`,
          `array.size-1;`,
          `array`
      ],
  ),
  new Test(
      `Java тілінде «Hello World» сөзін шығаруға арналған дұрыс жазылған синтаксисті көрсетіңіз?`,
      `System.out.println("Hello World");`,
      [
          `Console.WriteLine("Hello World");`,
          `echo("Hello World");`,
          `print ("Hello World");`,
          `WriteLine("Hello World");`
      ],
  ),
  new Test(
      `Жолдың ұзындығын анықтау үшін қандай әдіс қолданылады?`,
      `length()`,
      [
          `len()`,
          `getSize()`,
          `getLength()`,
          `get()`
      ],
  ),
  new Test(
      `Жолды бас әріптерге ауыстыру үшін қандай әдіс қолданылады?`,
      `toUpperCase()`,
      [
          `tuc()upper`,
          `Case()`,
          `touppercase()`,
          `toup()`
      ],
  ),
  new Test(
      `Java-да әдіс қалай шақырылады?`,
      `methodName();`,
      [
          `methodName[];`,
          `methodName;`,
          `method(0);`,
          `methodName_();`
      ],
  ),
  new Test(
      `Java атқарушы жүйесі жұмыс уақытының ортасына қатысты қателерді көрсету үшін қай классты қолданады?`,
      `Error`,
      [
          `Exception`,
          `Throwable`,
          `private`,
          `Exceptions`
      ],
  ),
  new Test(
      `Компиляторға жасалған class файлдарын қайда жазу керектігін көрсету үшін қандай кілт қолданылады?`,
      `-d`,
      [
          `-cp`,
          `–sourcepath`,
          `-cpp`,
          `-com`
      ],
  ),
  new Test(
      `Төмендегілердің қайсысы белгілі бір типтегі барлық объектілерге ортақ айнымалылар мен әдістерді анықтайтын үлгі ретінде қарастырылады?`,
      `класс`,
      [
          `объект`,
          `метод`,
          `литерал`,
          `форма`
      ],
  ),
  new Test(
      `Санау тұрақтыларын қалай салыстыруға болады?`,
      `equals() әдісін қолдану арқылы`,
      [
          `main() әдісін қолдану арқылы`,
          `meth()әдісін қолдану арқылы`,
          `setab()әдісін қолдану арқылы`,
          `get()әдісін қолдану арқылы`
      ],
  ),
  new Test(
      `Енгізу ағынын сипаттайтын байт ағынының абстрактілі класы:`,
      `InputStream`,
      [
          `OutputStream`,
          `PrintStream`,
          `FileInputStream`,
          `FileOutputStream`
      ],
  ),
  new Test(
      `Шығару ағынын сипаттайтын байт ағынының абстрактілі класы:`,
      `OutputStream`,
      [
          `InputStream`,
          `PrintStream`,
          `FileInputStream`,
          `FileOutputStream`
      ],
  ),
  new Test(
      `print() және println() әдістерін қолдайтын шығарудың байттық ағынына жататын класс:`,
      `PrintStream`,
      [
          `InputStream`,
          `OutputStream`,
          `FileInputStream`,
          `FileOutputStream`
      ],
  ),
  new Test(
      `Scanner класының nextLine() әдісі:`,
      `мәтіндік жолды оқу`,
      [
          `бір сөзді оқу`,
          `бүтін санды оқу`,
          `нақты санды оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `Scanner класының next() әдісі:`,
      `бір сөзді оқу`,
      [
          `мәтіндік жолды оқу`,
          `бүтін санды оқу`,
          `нақты санды оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `Scanner класының nextInt() әдісі:`,
      `бүтін санды оқу`,
      [
          `мәтіндік жолды оқу`,
          `бір сөзді оқу`,
          `нақты санды оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `Scanner класының nextDouble() әдісі:`,
      `нақты санды оқу`,
      [
          `мәтіндік жолды оқу`,
          `бүтін санды оқу`,
          `бір сөзді оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `Scanner класының nextFloat() әдісі:`,
      `нақты санды оқу`,
      [
          `мәтіндік жолды оқу`,
          `бүтін санды оқу`,
          `бір сөзді оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `Scanner класының nextShort() әдісі:`,
      `бүтін санды оқу`,
      [
          `мәтіндік жолды оқу`,
          `бір сөзді оқу`,
          `нақты санды оқу`,
          `бос жолды оқу`
      ],
  ),
  new Test(
      `AWT кітапханасын қолдану үшін қосылатын пакет:`,
      `java.awt`,
      [
          `Scanner`,
          `javax.swing (Swing кітапханасы)`,
          `javax`,
          `javaс`
      ],
  ),
  new Test(
      `ActionEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `Button, List және TextField`,
      [
          `Checkbox, Choice және List`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `барлық компоненттерде`
      ],
  ),
  new Test(
      `AdjustmentEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `Scrollbar`,
      [
          `Checkbox, Choice және List`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `барлық компоненттерде`
      ],
  ),
  new Test(
      `ComponentEvent оқиғасының класы пайда болады:`,
      `барлық компоненттерде`,
      [
          `Checkbox, Choice және List`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Frame, Panel, ScrollPane және Window`
      ],
  ),
  new Test(
      `ItemEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `Checkbox, Choice және List`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `барлық компоненттерде`
      ],
  ),
  new Test(
      `TextEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `TextComponent, TextArea және TextField`,
      [
          `Checkbox, Choice и List`,
          `Button, List және TextField`,
          `Container, Dialog, FileDialog, Frame, Panel, ScrollPane және Window`,
          `Dialog, FileDialog, Frame және Window`
      ],
  ),
  new Test(
      `JIT-компилятор дегеніміз не?`,
      `JIT компьютерлік бағдарламалардың өнімділігін арттырады`,
      [
          `қосымшаларды әзірлеуге арналған фреймворк`,
          `Java-бағдарламаларды орындайтын  Java виртуалды машинасын іске қосу`,
          `виртуалды машинаны іске қосу`,
          `Java-бағдарлама орындайтын қосымшаларды әзірлеуге арналған фреймворк`
      ],
  ),
  new Test(
      `Аталған құрылымдардың қайсысында белгілі бір класс әдісін шақыру бар екенін көрсетіңіз?`,
      `s.square(5, 12);`,
      [
          `s.square = 55;`,
          `int sq = s.square;`,
          `println(s.squarе);`,
          `int s.square;`
      ],
  ),
  new Test(
      `Құрылатын терезе өлшемі берілетін команда:`,
      `setSize(x,y)`,
      [
          `setTitle()`,
          `setVisible()`,
          `setLocation(a,е)`,
          `setDefault()`
      ],
  ),
  new Test(
      `Экрандағы терезенің орны берілетін команда:`,
      `setLocation()`,
      [
          `setTitle()`,
          `setVisible()`,
          `setSize()`,
          `setDefault()`
      ],
  ),
  new Test(
      `Java –да қолданылатын оқиғаларды өңдеудің ортақ схемасы:`,
      `делегирлеу схемасы`,
      [
          `реляционды схема`,
          `кеңейтілімді схема`,
          `интеллектуалды схема`,
          `жалпыланған схема`
      ],
  ),
  new Test(
      `Құрылған терезе атауын беру командасы:`,
      `setTitle()`,
      [
          `setLocation()`,
          `setVisible()`,
          `setSize()`,
          `setDefault()`
      ],
  ),
  new Test(
      `Терезе атауы келесі команда арқылы беріледі:`,
      `setTitle()`,
      [
          `setLocation()`,
          `setVisible()`,
          `setSize()`,
          `setDefault()`
      ],
  ),
  new Test(
      `FocusEvent оқиғасының класы пайда болады:`,
      `барлық компоненттерде`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `InputEvent оқиғасының класы пайда болады:`,
      `компоненттердің енгізу операциясында`,
      [
          `негізгі компоненттерде`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `PaintEvent оқиғасының класы пайда болады:`,
      `негізгі компоненттерде`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `WindowEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `Dialog, FileDialog, Frame және Window`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `KeyEvent оқиғасының класы пайда болады:`,
      `барлық компоненттерде`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `MouseEvent оқиғасының класы пайда болады:`,
      `барлық компоненттерде`,
      [
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`,
          `Checkbox, Choice және List`
      ],
  ),
  new Test(
      `Терезе орнын беру командасы:`,
      `setLocation()`,
      [
          `setTitle()`,
          `setVisible()`,
          `setSize()`,
          `setDefault()`
      ],
  ),
  new Test(
      `Аталған класс тақырыптарының қайсысы мүмкін болады?`,
      `final class A {`,
      [
          `class A extends B, C {`,
          `abstract final class A {`,
          `abstract final class A implements B {`,
          `implements final class A {`
      ],
  ),
  new Test(
      `Аталған класс тақырыптарының қайсысы мүмкін болады?`,
      `class A implements B, C {`,
      [
          `implements final class A {`,
          `class A extends B, C {`,
          `abstract final class A {`,
          `abstract final class A implements B {`
      ],
  ),
  new Test(
      `Кодта класс қалай жарияланады?`,
      `class MyClass {}`,
      [
          `new class MyClass {}`,
          `select * from class MyClass {}`,
          `MyClass extends class {}`,
          `MyClass class {}`
      ],
  ),
  new Test(
      `Java-да фигуралы жақшалар {} не үшін қолданылады?`,
      `бағдарлама блоктарын ажырату үшін`,
      [
          `циклдер мен шарттарды қалыптастыру үшін ғана`,
          `тек класс блогын құру үшін`,
          `циклдік операторды орындау үшін`,
          `басқа блокқа өту үшін`
      ],
  ),
  new Test(
      `Java тілінде тұрақтыны жариялау үшін қандай кілттік сөз қолданылады?`,
      `final`,
      [
          `const`,
          `finally`,
          `main`,
          `start`
      ],
  ),
  new Test(
      `JDK қандай ОЖ үшін қолжетімді?`,
      `Windows, Linux, Mac OS және Solaris`,
      [
          `Windows және Linux`,
          `Windows, Linux және Mac OS`,
          `Windows, Mac OS және Solaris`,
          `Windows, Mac OS, Unix және Solaris`
      ],
  ),
  new Test(
      `А класы В интерфейсінің әдістерін толығымен жүзеге асырмайды, оны қалай анықтау керек?`,
      `abstract-класс ретінде`,
      [
          `final-класс ретінде`,
          `ішкі класс ретінде`,
          `private-класс ретінде`,
          `интерфейс ретінде`
      ],
  ),
  new Test(
      `java.awt пакеті не үшін қажет?`,
      `Abstract Windows Toolkit -тің графикалық пайдаланушы интерфейсі`,
      [
          `Аплеттерді құруға кажетті кластар`,
          `AWT үшін түстер кеңістігі`,
          `Программа ішінде және программалар арасында деректерді тасымалдау`,
          `drag-and-drop технологиясын қолдау`
      ],
  ),
  new Test(
      `Кезектеп орналастыру менеджері:`,
      `FlowLayout`,
      [
          `BorderLayout`,
          `GridLayout`,
          `BoxLayout`,
          `Layout`
      ],
  ),
  new Test(
      `Кестелеп орналастыру менеджері:`,
      `GridLayout`,
      [
          `FlowLayout`,
          `BorderLayout`,
          `BoxLayout`,
          `Layout`
      ],
  ),
  new Test(
      `Шекаралық  орналастыру менеджері:`,
      `BorderLayout`,
      [
          `FlowLayout`,
          `GridLayout`,
          `BoxLayout`,
          `Layout`
      ],
  ),
  new Test(
      `Блоктық орналастыру менеджері:`,
      `BoxLayout`,
      [
          `FlowLayout`,
          `GridLayout`,
          `BorderLayout`,
          `Layout`
      ],
  ),
  new Test(
      `Панелдің шегі мына әдіспен орналастырады:`,
      `setBorder`,
      [
          `setSize`,
          `getContentPane`,
          `setVisible`,
          `getComponentCount`
      ],
  ),
  new Test(
      `Қандай класс бейнені анықтайды?`,
      `Imagelcon`,
      [
          `Color`,
          `JFrame`,
          `JPanel`,
          `Flowlayout`
      ],
  ),
  new Test(
      `Массивте char типті барлық жолды қайтарады:`,
      `toCharArray`,
      [
          `toChar`,
          `Char`,
          `CharArray`,
          `to`
      ],
  ),
  new Test(
      `Қатар ұзындығын қайтаратын әдіс?`,
      `str.length() әдісі`,
      [
          `str.charAt(int e)  әдісі`,
          `str.substring(int begin, int end) әдісі`,
          `str.indexOf(String str2) әдісі`,
          `str.charAt әдісі`
      ],
  ),
  new Test(
      `Қандай әдіс арқылы екі қатардың бірдей екендігін анықтауға болады?`,
      `equals әдісі`,
      [
          `regionMatches әдісі`,
          `startsWith әдісі`,
          `endsWith әдісі`,
          `switch операторы`
      ],
  ),
  new Test(
      `Жолдарды қосуға арналған әдіс?`,
      `concat`,
      [
          `replace`,
          `trim`,
          `substring`,
          `switch`
      ],
  ),
  new Test(
      `JFrame класы қайда сипатталған?`,
      `Swing кітапханасында`,
      [
          `Байттық ағында`,
          `Символдық ағында`,
          `AWT кітапханасында`,
          `SWT кітапханасында`
      ],
  ),
  new Test(
      `Келесі әдістің нәтижесі қандай мәнді қайтарады: public static int getAmount()?`,
      `бүтін сандық мәнді`,
      [
          `әдіс кодына байланысты`,
          `static-өріс мәнін қайтарады`,
          `this класынасілтеме қайтарады`,
          `static-әдісті қайтарады`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған next() әдісі:`,
      `бірінші пробелге дейінгі енгізілген жолды оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `boolean мәнін оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextLine()әдісі:`,
      `барлық енгізілген жолды оқиды`,
      [
          `бірінші пробелге дейінгі енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `boolean мәнін оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextInt() әдісі:`,
      `енгізілген int санын оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `бірінші пробелге дейінгі енгізілген жолды оқиды`,
          `boolean мәнін оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextDouble( )әдісі:`,
      `енгізілген double санын оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `boolean мәнін оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextBoolean() әдісі:`,
      `boolean мәнін оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `енгізілген double санын оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextByte() әдісі:`,
      `енгізілген byte санын оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `енгізілген double санын оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextFloat() әдісі:`,
      `енгізілген float санын оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `енгізілген double санын оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Scanner класында примитивті типтердің мәнін енгізу үшін анықталған nextShort() әдісі:`,
      `енгізілген қысқа санды оқиды`,
      [
          `барлық енгізілген жолды оқиды`,
          `енгізілген int санын оқиды`,
          `енгізілген double санын оқиды`,
          `бірінші пробелге дейінгі енгізілген byte санын оқиды`
      ],
  ),
  new Test(
      `Бір өлшемді массивті көрсетіңіз:`,
      `int month_days [];`,
      [
          `month_days = new int [12]`,
          `int month_days [][];`,
          `int month_days [][][];`,
          `month_days = new int`
      ],
  ),
  new Test(
      `Екі өлшемді массивті көрсетіңіз:`,
      `int month_days [][];`,
      [
          `month_days = new int [12]`,
          `int month_days [];`,
          `int month_days [][][];`,
          `month_days = new int`
      ],
  ),
  new Test(
      `Қандай шамадан тыс жүктелген әдіс қолданылатындығын не анықтайды - айнымалы түрі немесе объект түрі?`,
      `айнымалы түрі`,
      [
          `объект түрі`,
          `файл түрі`,
          `файл мекен-жайы`,
          `айнымалы мәні`
      ],
  ),
  new Test(
      `Код ішінде класстың жариялануы:`,
      `class MyClass {}`,
      [
          `new class MyClass {}`,
          `select * from class MyClass {}`,
          `MyClass class {}`,
          `MyClass extends class {}`
      ],
  ),
  new Test(
      `NEW операторы не үшін қолданылады?`,
      `класс экземплярын құру үшін`,
      [
          `жаңа айнымалы құру үшін`,
          `жаңа класс жариялау үшін`,
          `бұл OLD операторының антагонисті`,
          `класс экземплярын жариялау үшін`
      ],
  ),
  new Test(
      `Бірөлшемді массивтің дұрыс жарияланған түрін көрсетіңіз:`,
      `int [] month_days = new int [12];`,
      [
          `int month_days [] = int [12];`,
          `int month_days [][];`,
          `int month_days [][][];`,
          `month_days = new int [] int [12];`
      ],
  ),
  new Test(
      `Екіөлшемді массивтің дұрыс жарияланған түрін көрсетіңіз:`,
      `int month_days [][] = new int [3][3];`,
      [
          `month_days = new int [12]`,
          `int month_days [];`,
          `int month_days [][][];`,
          `month_days = new int [] new int [3][3];`
      ],
  ),
  new Test(
      `Егер х=10; у=5; болса, (х>у)? х : у өрнегінің мәні неге тең?`,
      `10`,
      [
          `5`,
          `50`,
          `15`,
          `25`
      ],
  ),
  new Test(
      `int[] a = new int[15]; Қай тұжырым жұрыс?`,
      `a.length равно 15`,
      [
          `a[14] не определено`,
          `a[14] равно 0`,
          `a[0] равно null`,
          `a[0] равно 0`
      ],
  ),
  new Test(
      `Бағдарлама сәтті құрастырылып, іске қосылатын негізгі main әдісінің жариялануын таңдаңыз:`,
      `public static void main(String[] args)`,
      [
          `public static void main()`,
          `static void main(String[] args)`,
          `public void main(String[] args)`,
          `public static int main(String[] args)`
      ],
  ),
  new Test(
      `А класы В класын newpack пакетінен алады. Бағдарлама фрагментінің 1 жолын қандай кодпен толықтыру қажет?`,
      `import java.newpack.B;`,
      [
          `import java.newpack.A;`,
          `class A extends java.newpack.* {`,
          `class A extends java.newpack.B {`,
          `class A extends B.newpack.java {`
      ],
  ),
  new Test(
      `Егер сіз негізгі main әдісін синтаксистік тұрғыдан дұрыс, бірақ JVM қолдамайтын модификаторлар, қайтарылатын мән және параметрлер тіркесімімен жарияласаңыз не болады?`,
      `бағдарлама компиляцияланады, бірақ іске қосу әрекеті қатеге ұшырайды`,
      [
          `бағдарлама компиляцияланады, басталады, бірақ ештеңе жасамайды`,
          `Бағдарлама компиляцияланбайды`,
          `бағдарлама компиляцияланады және іске қосылады`,
          `бағдарлама қате жібереді`
      ],
  ),
  new Test(
      `Екі класстан тұратын бағдарлама және әр класста кіру нүктесі – main() әдісі жарияланды. Осыдан не шығады?`,
      `бағдарлама компиляцияланады және іске қосылады`,
      [
          `бағдарлама компиляцияланбайды`,
          `Бағдарлама компиляцияланады, бірақ басталмайды`,
          `бағдарламадашексіз цикл орындалады`,
          `бағдарлама архиві ашылады`
      ],
  ),
  new Test(
      `for циклінің шартты өрнегінде қанша логикалық өрнек болуы мүмкін?`,
      `тек біреу, бірақ ол күрделі болуы мүмкін`,
      [
          `үтірмен ажыратылған бірнеше өрнек`,
          `нүктелі үтірмен ажыратылған бірнеше өрнек`,
          `күрделі өрнектер болуы мүмкін емес`,
          `бір қарапайым өрнек`
      ],
  ),
  new Test(
      `javac командасындағы -sourcepath кілттік сөзі не үшін қолданылады?`,
      `компилятор бастапқы файлдардың иерархиясын іздейтін каталогтарды көрсету үшін`,
      [
          `компилятор компьютер жадында мұрағатталған файлдардың class иерархиясын іздейтін каталогтарды көрсету үшін`,
          `.class файлдары үнсіз келісім бойынша жазылады`,
          `үтірмен бөлінген бірнеше өрнектерді қолдану үшін`,
          `мұрағатталған файлдардың мекен-жайын көрсету үшін`
      ],
  ),
  new Test(
      `Берілген тізімдердің қайсысында класс әдістеріне қол жеткізуді басқаратын спецификаторлардың ең толық тізімі бар?`,
      `public, private, protected және үнсіз ену`,
      [
          `public, private, static`,
          `public, static, protected, private және үнсіз ену`,
          `public, private, protected`,
          `public, static, final, protected`
      ],
  ),
  new Test(
      `Интерфейстегі әдістердің дұрыс жариялануының нұсқасын көрсетіңіз:`,
      `boolean setFlag(Boolean[] test);`,
      [
          `public static void main(String[] args);`,
          `public void main(String[] args);`,
          `public float getVol(float x);`,
          `private int getArea();`
      ],
  ),
  new Test(
      `Массивтің дұрыс жарияланған түрі:`,
      `int[] a = new int[] {1, 2, 3, 4, 5};`,
      [
          `int a = new int[] {1, 2, 3, 4, 5};`,
          `int[] a = new int {1, 2, 3, 4, 5};`,
          `int a[] = 1, 2, 3, 4, 5;`,
          `int[] a = int[] {1, 2, 3, 4, 5};`
      ],
  ),
  new Test(
      `Әдіс аргументі дегеніміз не?`,
      `әдіс жұмысына қатысу үшін әдіске берілетін мән немесе айнымалы`,
      [
          `әдістің нәтижесі жазылатын айнымалы`,
          `"return" кілт сөзінен кейін көрсетілген мән`,
          `әдіс жұмысына қатысатын кез келген айнымалы`,
          `әдіс денесінде жарияланған айнымалы немесе бағдарламада анықталған әдіс`
      ],
  ),
  new Test(
      `Класстың static-әдісінің қарапайым класс әдісінен айырмашылығы:`,
      `класстың әдеттегі әдісі класс объектісінің атынан жұмыс істейді, ал static-бүкіл класстың әдісі`,
      [
          `әдеттегі класс әдісінің мінез-құлқын мұрагер класста өзгертуге болады, ал статикалық әдіс мінез-құлқын өзгерту мүмкін емес`,
          `кәдімгі класс әдісін қайта анықтауға болады, ал статикалық әдіс мүмкін емес`,
          `статикалық-класс әдісін тек класс ішінде шақыруға болады, ал әдеттегі әдіс кодтың кез-келген бөлігінде шақырылады`,
          `static-класс әдісі алдында әдеттегі класс әдісін қайта анықтау керек`
      ],
  ),
  new Test(
      `Қарапайым класс әдісін static-әдіс ішінде қалай шақыруға болады?`,
      `болмайды, static-әдіс класс объектісімен жұмыс істемейді`,
      [
          `болады, оның алдында қарапайым класс әдісін қайта жүктеу керек`,
          `болады, оның алдында қарапайым класс әдісін қайта анықтау керек`,
          `болады, қосымша ешнәрсе жасаудың қажеті жоқ`,
          `класс экземпляры арқылы шақыру керек`
      ],
  ),
  new Test(
      `Java бағдарламаларында шамадан тыс жүктеме класстың қандай компоненттеріне қолданылады?`,
      `класс конструкторлары мен әдістеріне`,
      [
          `класс конструкторлары мен айнымалыларына`,
          `тек класс әдістеріне`,
          `тек класс конструкторларына`,
          `тек айнымалыларға`
      ],
  ),
  new Test(
      `Мұрагерлік принципі туралы дұрыс тұжырымды таңдаңыз:`,
      `Мұрагер класста тек private final static модификаторларымен белгіленбеген жоғарғы класстың әдістері ғана қайта анықталуы мүмкін`,
      [
          `Мұрагер класста жоғарғы класстың кез-келген әдісі қайта анықталуы мүмкін`,
          `Мұрагер класста тек final static protected модификаторларымен белгіленбеген жоғарғы класстың әдістері ғана қайта анықталуы мүмкін`,
          `Мұрагер класста тек private модификаторымен белгіленбеген жоғарғы класстың әдістері ғана қайта анықталуы мүмкін`,
          `Мұрагер класста тек private static модификаторларымен жоғарғы класстың әдістері ғана қайта анықталуы мүмкін`
      ],
  ),
  new Test(
      `Әдістердің қайсысы жоғарғы класстың қайта анықталған әдісі болып табылады: public int[]:  inverse (int ar[], int size)`,
      `public int[] inverse (int arr[], int arSize)`,
      [
          `public int inverse (int a, int e)`,
          `public int inverse (double a[], double size)`,
          `public int[] method (int ar[], int size)`,
          `protected int[] inverse (int arr[], int arSize)`
      ],
  ),
  new Test(
      `package mypackage.users.administrators.files; қандай атаулар кеңістігін анықтайды?`,
      `mypackage.users.administrators.files`,
      [
          `files`,
          `mypackage.files`,
          `users.administrators.files mypackage`,
          `administrators.files`
      ],
  ),
  new Test(
      `throws кілт сөзінен кейін қандай ерекшеліктер типі көрсетіледі?`,
      `әдіс тудыратын, бірақ өңдемейтін ерекшеліктер типтері`,
      [
          `әдіс өңдейтін ерекшеліктер типтері`,
          `әдіс тудыратын және өңдейтін ерекше жағдайлар типтері`,
          `Виртуалды машина жасаған ерекшеліктер типтері`,
          `жоғарыда келтірілген мәлімдемелер дұрыс емес`
      ],
  ),
  new Test(
      `А класында кейбір әдістер static модификаторымен жарияланады. Төмендегі мәлімдемелердің қайсысы дұрыс емес?`,
      `бұл әдістерді тек А класының даналарымен шақыруға болады`,
      [
          `бұл әдістер тек басқа статикалық әдістерді тудыруы мүмкін`,
          `бұл әдістер тек статикалық деректерге жүгінуі керек`,
          `бұл әдістерді кез-келген А класының экзмеплярлары жасалғаннан кейін шақыруға болады`,
          `жоғарыда аталған барлық мәлімдемелер дұрыс`
      ],
  ),
  new Test(
      `Қай мәлімдеме catch блогына қатысты дұрыс?`,
      `catch блогында ол ұстай алатын ерекше жағдайлар үшін өңдегіш сипатталған`,
      [
          `бір try блогына тек бір catch блогы жауап бере алады`,
          `алдымен ерекшелік иерархиясының жоғарғы бөлігіне арналған catch блогы болуы керек`,
          `бірнеше catch блоктары бір-біріне салынуы керек`,
          `кірістірілген try-блокқа жауап беретін барлық catch блоктары иерархия бойынша ең жоғарғысынан тыс сипатталады`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {String text = new String("Hello"); String test2 = new String("hello"); System.out.println(test==test2);}`,
      `false`,
      [
          `ull`,
          `Hello`,
          `true`,
          `0`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int sum = 0; for (int i = 1; i <= 3; sum += i++); System.out.println(sum);}`,
      `6`,
      [
          `5`,
          `3`,
          `compile error`,
          `false`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {String[] array = new String[3];  System.out.println(array[2]);}`,
      `null`,
      [
          `1`,
          `0`,
          `2`,
          `ArrayIndexOutOfBoundsException`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int[] array = new int[]{15, 5, -8, -6, 0, 7};   System.out.println(array[array.length - 1]);}`,
      `7`,
      [
          `6`,
          `-8`,
          `0`,
          `4`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int[] array = new int[]{15, 5, -8, -6, 0, 7}; System.out.println(array[0]);}`,
      `15`,
      [
          `6`,
          `5`,
          `0`,
          `4`
      ],
  ),
  new Test(
      `Берілген кодтың қатесін табыңыз: int a, b; System.out.print("Введите первое число: "); Scanner num = new Scanner(System.in); a = num.nextFloat();`,
      `nextFloat орнына nextInt қолдану қажет`,
      [
          `қате жоқ`,
          `System.in орнына System.out қолдану қажет`,
          `int a, b – жеке жазу керек`,
          `a мен bжеке жазылу қажет`
      ],
  ),
  new Test(
      `Java бағдарламаларында класс әдістері тақырыптарының қайсысы жарамсыз?`,
      `protected final Method (int a, float w)`,
      [
          `public void method (int a, float w)`,
          `private Method (int a, float w)`,
          `public void method ()`,
          `protected int method ()`
      ],
  ),
  new Test(
      `Бірөлшемді массивтің атауы мен жариялануының дұрыс жазылуы:`,
      `int[] a = new int[] {1, 2, 3, 4, 5};`,
      [
          `int a = new int[] {1, 2, 3, 4, 5};`,
          `int[] a = new int {1, 2, 3, 4, 5};`,
          `int a[] = 1, 2, 3, 4, 5;`,
          `int[] a = int[] {1, 2, 3, 4, 5};`
      ],
  ),
  new Test(
      `Берілген кодтың нәтижесі қандай? public static void main(String[] args) {int[] array = new int[3]; System.out.println(array[2]);}`,
      `0`,
      [
          `2`,
          `1`,
          `BoundsException`,
          `null`
      ],
  ),
  new Test(
      `Келесілердің қайсысы көпшілікке қолжетімділік модификаторына қатысты?`,
      `жалпыға қолжетімді деп жарияланған айнымалылар, әдістер мен конструкторлар кез-келген классқа қолжетімді болуы мүмкін`,
      [
          `жалпыға қолжетімді деп жарияланған айнымалылар, әдістер мен конструкторлар сол пакеттегі кез-келген классқа қолжетімді болуы мүмкін`,
          `суперклассқа жалпыға қолжетімді деп жарияланған айнымалылар, әдістер мен конструкторлар тек оның ішкі класына қолжетімді болуы мүмкін`,
          `тек оның ішкі класына қолжетімді болуы мүмкін`,
          `сол пакеттегі және ішкі классқа орналасқан кез-келген классқа қолжетімді болуы мүмкін`
      ],
  ),
  new Test(
      `Төмендегілердің қайсысы қорғалған қолжетімділік модификаторына қатысты орындалады?`,
      `қорғалған деп жарияланған айнымалылар, әдістер мен конструкторлар сол пакеттегі кез-келген классқа қолжетімді болуы мүмкін`,
      [
          `суперкласспен қорғалған деп жарияланған айнымалылар, әдістер мен конструкторлар тек оның еншілес класына қолжетімді`,
          `қорғалған деп жарияланған айнымалылар, әдістер мен конструкторлар кез-келген классқа қолжетімді`,
          `айнымалыларды класста қолдануға болмайды`,
          `айнымалыларды әдіске қолдануға болмайды`
      ],
  ),
  new Test(
      `Ағымдағы ағын() дегеніміз не?`,
      `бұл ағымдағы ағынға сілтеме алу үшін қолданылатын жалпыға қолжетімді статикалық ағын әдісі`,
      [
          `бұл ағындардың санын алу үшін қолданылатын ағын данасының әдісі`,
          `бұл ағымдағы ағынға сілтеме алу үшін қолданылатын объектінің ашық статикалық әдісі`,
          `бұл ағындардың санын алу үшін қолданылатын объект данасының әдісі`,
          `ағымдағы ағынға сілтеме алу үшін пайдаланылады`
      ],
  ),
  new Test(
      `Экземпляр айнымалысы деген не?`,
      `бұл класс ішіндегі айнымалылар, бірақ кез-келген әдіспен тыс`,
      [
          `бұл әдістер, конструкторлар немесе блоктар ішінде анықталған айнымалылар`,
          `бұл класс ішіндегі статикалық айнымалылар, бірақ кез-келген әдіспен тыс`,
          `бұл объект данасының әдісі`,
          `бұл объектінің ашық статикалық әдісі`
      ],
  ),
  new Test(
      `Инкапсуляция дегеніміз не?`,
      `Инкапсуляция - жалпыға қолжетімді әдістер арқылы өрістерге қолжеткізуге мүмкіндік беретін әдіс`,
      [
          `Инкапсуляция - бұл объектінің көптеген формаларды қабылдау қабілеті`,
          `Инкапсуляция - бір типтегі әртүрлі әдістерді анықтау әдісі немесе блоктар ішінде анықталған айнымалылар`,
          `Инкапсуляция – бұл көптеген формалар`,
          `Инкапсуляция - анықтау әдісі`
      ],
  ),
  new Test(
      `Java-да әдісті шамадан тыс жүктеу нені білдіреді?`,
      `бірдей атаумен, бірақ әртүрлі параметрлер жиынтығымен бірнеше әдістер`,
      [
          `сыртқы классқа қатысты класс әдісінің мінез-құлқының өзгеруі`,
          `ішкі классқа қатысты класс әдісінің мінез-құлқының өзгеруі`,
          `бірдей әдіспен, әртүрлі параметрлер жиынтығымен бірнеше түрлі класстар`,
          `бірдей атауы бар, бірақ әртүрлі параметрлер жиынтығы бар әдіс`
      ],
  ),
  new Test(
      `Java бағдарламасында қандай әдістер шамадан тыс жүктелген?`,
      `бір атауы бар, бірақ бір типтегі параметрлердің саны әртүрлі әдістер`,
      [
          `әртүрлі атаулары бар, бірақ саны мен параметрлері бірдей әдістер`,
          `бір атауы және бір типті параметрлердің саны бірдей әдістер`,
          `әртүрлі атаулары бар, бірақ параметрлері сәйкес болып келетін әдістер`,
          `жоғарыда көрсетілген әдістер емес`
      ],
  ),
  new Test(
      `Аталған құрылымдардың қайсысы қатесіз жазылған?`,
      `double r = Math.sqrt(s/Math.PI);`,
      [
          `double l = 2 * Math.pi * r;`,
          `double s = Math.pi * r * r;`,
          `double r = l / (2 * Math.Pi);`,
          `double r = Math.SQRT(s/Math.PI);`
      ],
  ),
  new Test(
      `Бір өлшемді массивті жариялау синтаксисі:`,
      `тип[] имя=new тип[размер];`,
      [
          `nums=new int[20];`,
          `тип[][] имя=new тип[размер_1][размер_2];`,
          `тип[][] имя=new тип[размер];`,
          `тип[] имя=new тип[размер_1][размер_2];`
      ],
  ),
  new Test(
      `Екі өлшемді массивті жариялау синтаксисі:`,
      `тип[][] имя=new тип[размер_1][размер_2];`,
      [
          `тип[] имя=new тип[размер];`,
          `nums=new int[20];`,
          `тип[][] имя=new тип[размер];`,
          `тип[] имя=new тип[размер_1][размер_2];`
      ],
  ),
  new Test(
      `ContainerEvent оқиғасының класы келесі компоненттер класында пайда болады:`,
      `Container, Dialog, Frame, Panel, ScrollPane и Window`,
      [
          `TextComponent, TextArea, Button, List, Scrollbar және TextField`,
          `Button, List және TextField`,
          `TextComponent, TextArea және TextField`,
          `Dialog, FileDialog, Frame және Window`
      ],
  ),
  new Test(
      `Барлық индентификаторлар басталады:`,
      `әріптен (A дан Z ке дейін немесе a дан z ке дейін), валюта символынан ($) немесе төменгі сызықтан (_)`,
      [
          `әріптен (A дан Z ке дейін немесе a дан z ке дейін), решетка символынан (#) немесе төменгі сызықтан (_)`,
          `әріптен (A дан Z ке дейін немесе a дан z ке дейін)`,
          `валюта символынан ($) немес сұрақ белгісінен (?)`,
          `решетка символынан (#) немесе төменгі сызықтан (_)`
      ],
  ),
  new Test(
      `Толық шартты нұсқаулықты шақыру синтаксисі if():`,
      `if (шарт){инструкция_1} else {инструкция_2}`,
      [
          `if (шарт){инструкция_1} else {инструкция_1}`,
          `(шарт){инструкция_1}`,
          `if (шарт){инструкция_1} if {инструкция_1}`,
          `if else {инструкция_1}`
      ],
  ),
  new Test(
      `for() циклдық операторын шақыру синтаксисі:`,
      `for (инициализация; шарт; итерация){// цикл денесі}`,
      [
          `while (шарт){// цикл командасы }`,
          `do{// цикл командасы }while(шарт);`,
          `continue()`,
          `if (шарт) {инструкция_1} else {инструкция_2}`
      ],
  ),
  new Test(
      `while() инструкциясын шақыру синтаксисі:`,
      `while (шарт){// цикл командасы }`,
      [
          `for(инициализация; шарт; итерация){// цикл денесі}`,
          `do{// цикл командасы}while(шарт);`,
          `continue()`,
          `if (шарт) {инструкция_1} else {инструкция_2}`
      ],
  ),
  new Test(
      `do-while() инструкциясын шақыру синтаксисі:`,
      `do{// цикл командасы } while(шарт);`,
      [
          `for (инициализация; шарт; итерация) {// цикл денесі}`,
          `while (условие) {// команды цикла}`,
          `continue()`,
          `if (шарт) {инструкция_1} else {инструкция_2}`
      ],
  ),
  new Test(
      `Ағымдағы циклды аяқтау үшін цикл нұсқаулығында қолданылады:`,
      `continue()`,
      [
          `while (условие) {// команды цикла}`,
          `do{// команды цикла}while(услови<variant>;`,
          `for (инициализация; условие; итерация){//тело цикла}`,
          `if (условие) {инструкции_1} else {инструкции_2}`
      ],
  ),
  new Test(
      `Java тілінде класс дегеніміз не?`,
      `Java тіліндегі объектіге бағытталған бағдарламалаудың негізгі элементі`,
      [
          `бағдарламаның күрделілік деңгейі.`,
          `Барлық операторлар оларды пайдаланудың күрделілігінебайланысты класстарға бөлінеді`,
          `мүмкін болатын айнымалы атаулардың бірі`,
          `мұндай ұғым тек C++ тілінде, Java-да мұндай ұғым жоқ`
      ],
  ),
  new Test(
      `extends кілттік сөзі нені білдіреді?`,
      `бұл класс басқасынан мұра болып табылады`,
      [
          `бұл оның қасиеттерін кеңейтетін қосымша класс модулі`,
          `екі класс бірдей жұмыс істейді`,
          `бұл бағдарламаның ең үлкен класы`,
          `бұл оның қасиеттерін кеңейтетін класс`
      ],
  ),
  new Test(
      `Java-да әдісті қайта анықтау нені білдіреді?`,
      `сыртқы классқа қатысты класс әдісінің мінез-құлқының өзгеруі`,
      [
          `бірдей атаумен, бірақ әртүрлі параметрлер жиынтығымен бірнеше әдістер`,
          `ішкі классқа қатысты класс әдісінің мінез-құлқының өзгеруі`,
          `бірдей әдіспен, әртүрлі параметрлер жиынтығымен бірнеше түрлі класстар`,
          `бірдей атауы бар, бірақ әртүрлі параметрлер жиынтығы бар әдіс`
      ],
  ),
  new Test(
      `Төменде жарияланған әдіс нені қайтарады: public static int getAmount()?`,
      `бүтін санды қайтарады`,
      [
          `анық емес, әдіс кодын қарау керек`,
          `static-класс өрісін қайтарады`,
          `осы класс объектісіне сілтемені қайтарады`,
          `static-класс әдісін қайтарады`
      ],
  ),
  new Test(
      `NetBeans Profiler қандай міндеттерді атқаруға көмектеседі?`,
      `жадтағы кедергілерді іздеу және жұмыс жылдамдығын оңтайландыру`,
      [
          `модульдік Swing-қосымшаларды әзірлеу`,
          `интерфейстерді визуалды дамыту`,
          `осы класс объектісіне сілтемені қайтарады`,
          `static-класс әдісін қайтарады`
      ],
  ),
  new Test(
      `Тұрақтыға қатысты қандай келісім бар?`,
      `тұрақты атауын бас әріптен бастау ұсынылады`,
      [
          `тұрақты атауын $ - дан бастау ұсынылады`,
          `тұрақты атауы бас әріптермен жақсы жазылады`,
          `тұрақты атауын #-дан бастау ұсынылады`,
          `тұрақты атауын { -дан бастау ұсынылады`
      ],
  ),
  new Test(
      `OББ негізін құрайтын үш негізгі қағида:`,
      `инкапсуляция, полиморфизм және мұрагерлік`,
      [
          `инкапсуляция, полиморфизм және делегирлеу`,
          `әдіс, полиморфизм және делегирлеу`,
          `әдіс, класс және делегирлеу`,
          `инкапсуляция, әдіс және мұрагерлік`
      ],
  ),
  new Test(
      `Java-да бағдарламаны іске қосудың қандай әдісі бар?`,
      `кез келген класста main() әдісімен`,
      [
          `бағдарламаны іске қосу жобаны құрастыру арқылы жүзеге асырылады, негізгі әдіс жоқ`,
          `кез келген, оны жоба параметрлерінде орнатуға болады`,
          `бірінші жазылған класстан және оның ішіндегі әдістен бастап`,
          `бірінші және әдіс жазылған кластан бастап`
      ],
  ),
  new Test(
      `removeAll() қызметі:`,
      `контейнердегі барлық элементтерді жояды`,
      [
          `контейнерден компонент элементін алып тастайды`,
          `контейнерге компонент элементін қосады`,
          `контейнердегі элементтер санын қайтарады`,
          `басқа элементтерді қамтиды`
      ],
  ),
  new Test(
      `. java.applet пакетіндегі класстар:`,
      `Аплеттерді құруға кажетті кластар`,
      [
          `Abstract Windows Toolkit графикалық пайдаланушы интерфейсі`,
          `AWT үшін түстер кеңістігі`,
          `Программалар ішінде және арасында деректерді тасымалдау`,
          `drag-and-drop технологиясын қолдау`
      ],
  ),
  new Test(
      `AWT және Swing кітапханаларын пайдалану үшін қосылатын пакет:`,
      `javax.swing (кітапхана Swing), java.awt и java.awt.event (кітапхана AWT)`,
      [
          `Scanner`,
          `java.awt.event (кітапхана AWT), import mypack.subpack.MyClass, java.lang`,
          `interface One{ void setOne(int n);}`,
          `public void setOne(int n){number=n;}`
      ],
  ),
  new Test(
      `double типті екі өлшемді массивті көрсетіңіз:`,
      `double matrix [][] = new double [4][4];`,
      [
          `double matrix [] = new double [4];`,
          `double matrix [] = new double [4][4];`,
          `double matrix [][] = new double [4];`,
          `int matrix [][] = int double [4][4];`
      ],
  ),
  new Test(
      `Бүтін типті екі өлшемді массивті көрсетіңіз:`,
      `int matrix [][] = new int [4][4];`,
      [
          `double matrix [] = new double [4];`,
          `double matrix [] = new double [4][4];`,
          `double matrix [][] = new double [4];`,
          `int matrix [][] = int double [4][4];`
      ],
  ),
  new Test(
      `Бағдарламаның орындалу нәтижесі: int[] a = {2,4,5,7,8,6,3,12,19,9};  int i, max=a[0];        for(i=0; i<10; i+=2)  if (a[i]>max) max=a[i];   System.out.print(max);`,
      `19`,
      [
          `12`,
          `9`,
          `8`,
          `6`
      ],
  ),
  new Test(
      `Бағдарламаның орындалу нәтижесі: int[] a = {-1,2,-3,-4,-5,6,7,9,-10,11};   int i, p=1;  for(i=0; i<9; i+=2) if (a[i]<0)  p*= a[i];   System.out.print(p);`,
      `p=150`,
      [
          `125`,
          `15`,
          `p=-15`,
          `375`
      ],
  ),
  new Test(
      `Бағдарламаның орындалу нәтижесі: int[] a = {1,2,3,4,5,-2,6,16};  int i, p=1; for(i=0; i<8; i++)    if (a[i]%2!=0) p*=a[i];System.out.println(p);`,
      `15`,
      [
          `216`,
          `16`,
          `256`,
          `360`
      ],
  ),
  new Test(
      `Результат выполнения программы: int[] a = {1,2,3,4,5,-2,6,1};  int i, p=1; for(i=0; i<8; i++)    if (a[i]%2=0)  p*=a[i]; System.out.println(p);`,
      `-96`,
      [
          `216`,
          `16`,
          `256`,
          `360`
      ],
  ),
  new Test(
      `Java үшін жариялаған "Бір рет жазу, кез-келген жерде іске қосу" қағидасы нені білдіреді?`,
      `компиляцияланған Java бағдарламасын JVM бар кез-келген платформада іске қосуға болады`,
      [
          `Java бағдарламасын Java аудармашысы бар кез-келген платформадағы көздерден бастауға болады`,
          `Java бағдарламасын кез-келген платформа үшін орындалатын файлға компиляциялауға болады`,
          `Java бағдарламасы компиляцияланады, бірақ іске қосу әрекеті қатеге ұшырайды`,
          `бағдарлама компиляцияланады, іске қосылады, бірақ ештеңе жасамайды`
      ],
  ),
  new Test(
      `Жолдың көрсетілген бөлігін қайтарады:`,
      `str.substring(int {, int })`,
      [
          `str.charAt(int е)`,
          `str.length()`,
          `str.indexOf(String str2)`,
          `str.substring(int begin)`
      ],
  ),
  new Test(
      `Жолға ішкі жолды қайтаратын әдіс?`,
      `str.indexOf(String str2)`,
      [
          `str.substring(int begin)`,
          `str.substring(int begin, int end)`,
          `str.charAt(int e)`,
          `str.length()`
      ],
  ),
  new Test(
      `Бір жолдың ішкі жолын басқа жолдың ішкі жолымен салыстыру үшін қандай әдіс қолданылады?`,
      `regionMatches әдісі`,
      [
          `equals әдісі`,
          `startsWith әдісі`,
          `endsWith әдісі`,
          `switch операторы`
      ],
  ),
  new Test(
      `Қай әдіс жолдың көрсетілген префикстен басталатынын тексереді?`,
      `startsWith әдісі`,
      [
          `regionMatches әдісі`,
          `equals әдісі`,
          `endsWith әдісі`,
          `switch операторы`
      ],
  ),
  new Test(
      `Жолдың соңы параметрінің сәйкестігін қай әдіс тексереді?`,
      `endsWith әдісі`,
      [
          `regionMatches әдісі`,
          `startsWith әдісі`,
          `equals әдісі`,
          `switch операторы`
      ],
  ),
  new Test(
      `String классының compareTo әдісі не үшін қолданылады?`,
      `Екі қатардың қайсысы қысқа екенін анықтау үшін`,
      [
          `Екі қатардың бірдей екенін анықтау үшін`,
          `Қатар соңын параметрлер бойынша тексеру үшін`,
          `Қатар фрагментпен басталғанын тексеру үшін`,
          `switch операторы`
      ],
  ),
  new Test(
      `BufferedReader -да қандай әдiс символдарды оқу үшiн қолданылады?`,
      `read`,
      [
          `write`,
          `printwriter`,
          `inputstreamreader`,
          `outputstream`
      ],
  ),
  new Test(
      `Клавиатурадан жолдарды оқуға қандай әдіс қолданылады?`,
      `readLine`,
      [
          `read`,
          `write`,
          `printwriter`,
          `inputStream`
      ],
  ),
  new Test(
      `Консольдан оқу үшін не қолданылады?`,
      `BufferedReader`,
      [
          `BufferedInputStream`,
          `BufferedOutputStream`,
          `PrintStream`,
          `InputStream`
      ],
  ),
  new Test(
      `Қай класс бірнеше конструкторды анықтайды?`,
      `PrintWriter`,
      [
          `OutputStream`,
          `InputStream`,
          `Buffered Reader`,
          `Buffered Writer`
      ],
  ),
  new Test(
      `Java-да енгізу-шығару ненің көмегімен іске асырылады?`,
      `Ағындар`,
      [
          `Пакеттер`,
          `Символдар`,
          `Айнымалылар`,
          `Кластар`
      ],
  ),
  new Test(
      `Байттық ағындар:`,
      `RandomAccessFile`,
      [
          `PrintWriter`,
          `LineNumberReader`,
          `Writer`,
          `PipedWriter`
      ],
  ),
  new Test(
      `Файлға жазу үшін қолданылады:`,
      `write`,
      [
          `read`,
          `main`,
          `мthis`,
          `close`
      ],
  ),
  new Test(
      `Есеп шешудің дұрыс нұсқауын таңдаңыз: егер а ≤ b және с < 3, онда а меншіктейді (с+b)`,
      `if (a<=b && c<3) a=c+b;`,
      [
          `if ((a<=b /& c<3) a=c+b;`,
          `if (a<=b &\ (c<3) a=c+b;`,
          `if (a<=b !! c<3) a=c+b;`,
          `if (a<=b & c<3) a=c+b;`
      ],
  ),
  new Test(
      `Шартты оператордың дұрыс сипаттамасын көрсетіңіз: a және b берілген, олардың кішісін жарты қосындымен, ал үлкенін екеуінің екі есе көбейтіндісімен орындау керек:`,
      `if (a<b)  {a=(a+b) /2; b=2*a*b;}`,
      [
          `if (a<b)   {a=(a+b) /2;}`,
          `if a<b a1=a+b/2; b1=2*a*b;`,
          `if a<b {a=(a+b) /2; b=2*a*b;}`,
          `if (a<b)   a1=(a+b) /2; b1=2*a*b;`
      ],
  ),
  new Test(
      `Шартты оператордың дұрыс сипаттамасын көрсетіңіз: екі санның қосындысы бірден кіші болса, онда арифметикалық ортасын, кері жағдайда оның геометриялық ортасын табыңыз:`,
      `if (x+y<1) s=(x+y)/2; else s=Math. pow(x*y,2);`,
      [
          `if (x+y>1) s=(x+y)/2; else s=sqr(x*y);`,
          `if (x+y>1) s=x+y/2; else s=Math. pow(x*y,2);`,
          `if (x+y<1) s=(x+y)/2 else s=Math. pow(x*y);`,
          `if (x+y<1) s=x+y/2 else s=Math. pow(x*y,2);`
      ],
  ),
  new Test(
      `Келесі есептің бағдарламалау тілінде дұрыс жазылған вариантын таңдаңыз: егер а ≤ b, онда а меншіктейді (с+b+d)`,
      `if (a<=b) a=c+b+d;`,
      [
          `if ((a<=b  && c<3) a=c+b;`,
          `if (a<=b && c<3) a=c+b;`,
          `if (a<=b !! c<3) a=c+b;`,
          `if (a<=b & c<3) a=c+b;`
      ],
  ),
  new Test(
      `Келесі есептің бағдарламалау тілінде дұрыс жазылған вариантын таңдаңыз: егер а ≤ b немесе с < 3, онда а меншіктейді (a+b+c)`,
      `if (a<=b || c<3) a=a+b+c;`,
      [
          `if ((a<= b /& c<3) a=c+b;`,
          `if (a<= b)  &\ (c<3) a=c+b;`,
          `if (a<=b !! c<3) a=c+b;`,
          `if (a<=b & c<3) a=c+b;`
      ],
  ),
  new Test(
      `Келесі есептің бағдарламалау тілінде дұрыс жазылған вариантын таңдаңыз: a және b берілген, олардың үлкенін екеуінің қосындысымен, ал кішісін айырмасымен алмастырыңыз:`,
      `if (a>b)   {a=a+b; b=a-b;}`,
      [
          `if (a<b)   {a=(a+b) /2; b=2*a*b;}`,
          `if a<b a1=a+b/2; b1=2*a*b;`,
          `if a<b {a=(a+b) /2; b=2*a*b;}`,
          `if (a<b)   a1=(a+b) /2; b1=2*a*b;`
      ],
  ),
  new Test(
      `ОББ дегеніміз не?`,
      `объектіге-бағытталған бағдарламалау-бұл бағдарламаны объектілер жиынтығы ретінде ұсынуға негізделген бағдарламалау әдістемесі, олардың әрқайсысы белгілі бір класстың данасы болып табылады, ал класстар мұрагерлік иерархиясын құрайды`,
      [
          `объектіге-бағытталған бағдарламалау-бұл жоғары деңгейлі ұғымдарды қолданатын және компьютердің жад ұяшықтарымен тікелей жұмыс істемейтін, Ассемблерден айырмашылығы бар бағдарламалаудың жиі қолданылатын кез-келген түрі`,
          `объектіге-бағытталған бағдарламалау-бұл әдемі түсінік. Егер сіз бұл туралы ойласаңыз, ол қосымша семантикалық жүктемені көтермейді, тек бағдарламашылар аббревиатураларды жақсы көреді, сондықтан олардың білім салалары өте жалғыз бағдарламашы сияқты күрделі көрінеді`,
          `объектіге-бағытталған бағдарламалау-бұл бағдарламалау түрі. Ойланып қарайтын болсақ, онда қосымша мағыналық жүктеме жоқ, тек бағдарламашылар қысқартылған сөздерді жақсы көреді, со арқылы олардың білім саласы күрделірек болып келеді`,
          `объектіге-бағытталған бағдарламалау-бұл жоғары деңгейлі деген түсінік қолданылатын, бағдарламалаудың кез-келген  түрі`
      ],
  ),
];

export default tests;